&НаКлиенте
Перем Кэш Экспорт;

&НаКлиенте
Перем НажатиеВыполнено;

////////////////////////////////
//////функции совместимости/////

&НаКлиенте
Функция сбисЭлементФормы(Форма,ИмяЭлемента)
	Если Кэш.ПараметрыСистемы.Клиент.УправляемоеПриложение Тогда
		Возврат Форма.Элементы.Найти(ИмяЭлемента);
	КонецЕсли;
	Возврат Форма.ЭлементыФормы.Найти(ИмяЭлемента);
КонецФункции

&НаКлиенте
Функция сбисПолучитьСтраницу(Элемент, ИмяСтраницы)
	Если Кэш.ПараметрыСистемы.Клиент.УправляемоеПриложение Тогда
		Возврат Элемент.ПодчиненныеЭлементы[ИмяСтраницы];
	КонецЕсли;
	Возврат Элемент.Страницы[ИмяСтраницы];
КонецФункции

////////////////////////////////
///////внутренние функции///////

// Процедура заполняет реквизиты формы из кэша	
&НаКлиенте
Процедура ЗагрузитьПараметрыАвторизации(ВходящийКэш=Неопределено) Экспорт
	Если Не ВходящийКэш = Неопределено Тогда
		Кэш = ВходящийКэш;
	ИначеЕсли Кэш = Неопределено Тогда
		Кэш = ЭтаФорма.ВладелецФормы.Кэш;
	КонецЕсли;
	ЗапомнитьПароль = Кэш.Парам.ЗапомнитьПароль;
	ЗапомнитьСертификат = Кэш.Парам.ЗапомнитьСертификат;
	Если Не ЗапомнитьПароль Тогда
		Пароль = "";
	Иначе
		Пароль = Кэш.Парам.Пароль;
	КонецЕсли;
	Если Не ЗапомнитьСертификат Тогда
		Сертификат="";
	Иначе
		Сертификат = Кэш.Парам.Сертификат;
	КонецЕсли;
	Логин = Кэш.Парам.Логин;
	Если Кэш.Парам.СпособОбмена = 3 Тогда
		Кэш.Парам.ВходПоСертификату = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьНастройкиСоединения() Экспорт
	ПараметрыПослеНастройки = Новый Структура("СпособОбмена, СпособХраненияНастроек, АдресСервера", Кэш.Парам.СпособОбмена, Кэш.Парам.СпособХраненияНастроек, Кэш.СБИС.АдресСервера);
	фрм = Кэш.ГлавноеОкно.сбисПолучитьФорму("ФормаНастройкаСоединения",,,ЭтаФорма);
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		сбисПослеНастройкиСоединения(фрм.ОткрытьМодально(), ПараметрыПослеНастройки); 
	#Иначе
		фрм.ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("сбисПослеНастройкиСоединения",ЭтаФорма,ПараметрыПослеНастройки);
		фрм.Открыть();
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПараметрыАвторизации()
	// Процедура сохраняет параметры авторизации в кэш	
	Кэш.Парам.ЗапомнитьПароль = ЗапомнитьПароль;
	Кэш.Парам.ЗапомнитьСертификат = ЗапомнитьСертификат;
	Кэш.Парам.Логин = Логин;
	Если Не ЗапомнитьПароль Тогда
		Кэш.Парам.Пароль="";
	Иначе
		Кэш.Парам.Пароль = Пароль;
	КонецЕсли;
	Если Не ЗапомнитьСертификат Тогда
		Кэш.Парам.Сертификат="";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СбисОбновитьОтображение(ПараметрыОтображения)
	ПоказатьРежимВхода			= Истина;
	ПоказатьРежимВходаПоЛогину  = Истина;
	ПоказатьПанельАвторизации	= Истина;
	ПараметрПроверить			= Неопределено;
	СтрокаЗаголовок				= "Войти на " + СтрЗаменить(СтрЗаменить(Кэш.СБИС.АдресСервера, "https:", ""), "/", "");
	//АПИ - авторизуемся только по логину-паролю
	Если		Кэш.Парам.СпособОбмена = 3 тогда 
		ПоказатьРежимВхода = Ложь;
		//Каталог - не авторизуемся на online, просто нажать на кнопку входа.	
	ИначеЕсли 	Кэш.Парам.СпособОбмена = 1 Тогда
		ПоказатьРежимВхода = Ложь;
		ПоказатьРежимВходаПоЛогину = Ложь;
		ПоказатьПанельАвторизации = Ложь;
		СтрокаЗаголовок = "Работа через каталог";
	КонецЕсли;
	Если ПараметрыОтображения.Свойство("ТекстОшибки", ПараметрПроверить) Тогда
		ОшибкаАвторизации = ПараметрПроверить;
	КонецЕсли;
	СбисЭлементФормы = сбисЭлементФормы(ЭтаФорма,"ПоТокену");
	Если Не СбисЭлементФормы = Неопределено Тогда
		СбисЭлементФормы.Видимость =(	(	Кэш.Парам.СпособОбмена = 3 И Не Кэш.Парам.ИнтеграцияAPIВызовыНаКлиенте)
										Или	Кэш.Парам.СпособОбмена = 4 
										Или	Кэш.Парам.СпособОбмена = 5
										Или Кэш.Парам.СпособОбмена = 6
										Или Кэш.Парам.СпособОбмена = 7);
	КонецЕсли;
	сбисЭлементФормы(ЭтаФорма,"РежимВхода").Видимость = ПоказатьРежимВходаПоЛогину;
	сбисЭлементФормы(ЭтаФорма,"РежимВхода1").Видимость = ПоказатьРежимВхода;
	сбисЭлементФормы(ЭтаФорма,"РежимВходаПоСертификату").Видимость = ПоказатьРежимВхода;
	сбисЭлементФормы(ЭтаФорма,"РежимВходаПоСертификату1").Видимость = ПоказатьРежимВхода;
	ЭтаФорма.Заголовок = СтрокаЗаголовок;
	
	ПанельДанныеАвторизации = сбисЭлементФормы(ЭтаФорма,"ПанельДанныеАвторизации");
	Если Не ПоказатьПанельАвторизации Тогда
		//"Скрываем" панель авторизации.
		сбисЭлементФормы(ЭтаФорма,"ЗапомнитьСертификат").Видимость = Ложь;
		ПанельДанныеАвторизации.ТекущаяСтраница = сбисПолучитьСтраницу(ПанельДанныеАвторизации,"ПоСертификату");
		СписокСертификатов.Очистить();
	ИначеЕсли Кэш.Парам.ВходПоСертификату Тогда 
		сбисЭлементФормы(ЭтаФорма,"ЗапомнитьСертификат").Видимость = Истина;
		ПанельДанныеАвторизации.ТекущаяСтраница = сбисПолучитьСтраницу(ПанельДанныеАвторизации,"ПоСертификату");
	Иначе		
		ПанельДанныеАвторизации.ТекущаяСтраница = сбисПолучитьСтраницу(ПанельДанныеАвторизации,"ПоПаролю");
		ЭтаФорма.ТекущийЭлемент = ПанельДанныеАвторизации;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СбисПослеНастройкиСоединения(РезультатИзменения, ПараметрыНастройки) Экспорт
	Если РезультатИзменения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ОбновитьОтображение = Истина;
	ПараметрыОтображения = Новый Структура;
	Если	Не ПараметрыНастройки.СпособОбмена = РезультатИзменения.СпособОбмена
		Или	Не ПараметрыНастройки.АдресСервера = Кэш.СБИС.АдресСервера Тогда 
		ЭлементТокен = СбисЭлементФормы(ЭтаФорма, "ПоТокену");
		Если Не ЭлементТокен = Неопределено Тогда
			ЭлементТокен.Видимость = (	Кэш.Парам.СпособОбмена=3 
									Или Кэш.Парам.СпособОбмена=4 
									Или Кэш.Парам.СпособОбмена=5
									Или Кэш.Парам.СпособОбмена=6
									Или Кэш.Парам.СпособОбмена=7);
		КонецЕсли;
		Кэш.Парам.ВходПоСертификату = Кэш.Парам.ВходПоСертификату И Не (РезультатИзменения.СпособОбмена = 3);
		//Изменился способ обмена	
		Если Кэш.Парам.ВходПоСертификату Тогда
			ОбновитьОтображение = Ложь;
			ОбновитьСписокСертификатов();
		Иначе
			ПараметрыОтображения.Вставить("ТекстОшибки", "");
		КонецЕсли;
	КонецЕсли;
	Если ОбновитьОтображение Тогда
		сбисОбновитьОтображение(ПараметрыОтображения);
	КонецЕсли;
	Если РезультатИзменения.СпособОбмена=1 Тогда  //Закрываем форму авторизации, как было раньше
		НажатиеВыполнено = Истина;
		ЭтаФорма.Закрыть("Ok");
	КонецЕсли;
КонецПроцедуры

// Процедура заполняет список сертификатов
&НаКлиенте
Процедура ОбновитьСписокСертификатов()
	ТекстОшибки = "";
	СписокСертификатов.Очистить();
	Если Не Кэш.СБИС.ОбменВключен Тогда
		Ошибка = Новый Структура("code, message, details", 100, "Не включен обмен со СБИС", "Сертификаты не найдены. Выберите способ обмена в настройках соединения.");
		Кэш.ГлавноеОкно.сбисСообщитьОбОшибке(Кэш, Ошибка, Новый Структура("ФормаВладелец, Отправлять", ЭтаФорма, Ложь));
		ТекстОшибки = Ошибка.message;
	КонецЕсли;
	
	//Получим список
	Если ТекстОшибки = "" Тогда
		СписокСертификатовСырой = Кэш.Интеграция.ПолучитьСписокСертификатовДляАвторизации(Кэш,ТекстОшибки);
	КонецЕсли;
	Если	ТекстОшибки = ""
		И	Не	ЗначениеЗаполнено(СписокСертификатовСырой) Тогда
		ТекстОшибки = "Сертификаты не найдены";
	КонецЕсли;
	//Сортируем сертификаты
	Если ТекстОшибки = "" Тогда
		ПараметрыСортировки = Новый Структура("ПоляСортировки", Новый Массив);
		ПараметрыСортировки.ПоляСортировки.Добавить(Новый Структура("Поле,Направление", "ДействителенПо",	"Убыв"));
		ПараметрыСортировки.ПоляСортировки.Добавить(Новый Структура("Поле,Направление", "Квалифицированный","Возр"));
		СписокСертификатов = Кэш.ОбщиеФункции.сбисОтсортироватьОбъект(СписокСертификатовСырой,ПараметрыСортировки, Ложь);
	КонецЕсли;
	ПараметрыОтображения = Новый Структура;
	Если Не ТекстОшибки = "" Тогда
		ПараметрыОтображения.Вставить("ТекстОшибки", ТекстОшибки);	
	КонецЕсли;	
	СбисОбновитьОтображение(ПараметрыОтображения);
КонецПроцедуры

////////////////////////////////
//////////события формы/////////

&НаКлиенте
Процедура КнопкаВойтиНажатие(Кнопка)
	ВыполнитьАвторизацию();
КонецПроцедуры

// Процедура открывает окно настройки соединения	
&НаКлиенте
Процедура НастройкаСоединенияНажатие(Элемент)
	ИзменитьНастройкиСоединения();
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПриИзменении(Элемент)
	// Процедура записывает в Кэш измененный параметр	
	Кэш.Парам[Элемент.Имя] = ЭтаФорма[Элемент.Имя];
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ПараметрЗакрытия, ТекстПредупреждения="", СтандартнаяОбработка=Истина)
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		//Для толстого клиента второй параметр - признак выполнения стандартной обработки
		Если Не НажатиеВыполнено Тогда//Если на кнопку не нажимали, то результат авторизации должен быть неопределен.
			ПараметрЗакрытия = Ложь;
			ЭтаФорма.Закрыть(Неопределено);
		КонецЕсли;
	#Иначе
		//Для тонкого клиента второй параметр - признак завершения работы программы
		Если ПараметрЗакрытия = Истина Тогда
			Возврат;
		ИначеЕсли Не НажатиеВыполнено Тогда//Если на кнопку не нажимали, то результат авторизации должен быть неопределен.
			СтандартнаяОбработка = Ложь;
			ЭтаФорма.Закрыть(Неопределено);
		КонецЕсли;
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗагрузитьПараметрыАвторизации();
	
	Если Не Кэш.Парам.СпособОбмена = 1
		И	Кэш.Парам.ВходПоСертификату Тогда
		ОбновитьСписокСертификатов();
	Иначе
		сбисОбновитьОтображение(Новый Структура("ТекстОшибки", ""));
	КонецЕсли;	
	НажатиеВыполнено = Ложь;
	Если Не Кэш.СБИС.ОбменВключен Тогда
		ЭтаФорма.ПодключитьОбработчикОжидания("ПослеОткрытия",0.1,Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОткрытия()
	ИзменитьНастройкиСоединения();
КонецПроцедуры

// Функция переключает варианты авторизации По сертификату/По паролю	
&НаКлиенте
Процедура РежимВходаПоПаролюПриНажатии(Элемент)
	Кэш.Парам.ВходПоСертификату = Ложь;
	сбисОбновитьОтображение(Новый Структура);
КонецПроцедуры
&НаКлиенте
Процедура РежимВходаПоСертификатуПриНажатии(Элемент)
	Кэш.Парам.ВходПоСертификату = Истина;
	ОбновитьСписокСертификатов();
	
	//Если 1 сертификат и вход по сертификату, то авторизоваться и закрыть форму
	Если СписокСертификатов.Количество() = 1 Тогда
		Если Кэш.ПараметрыСистемы.Клиент.УправляемоеПриложение Тогда
			ЭтаФорма.ПодключитьОбработчикОжидания("сбисВыполнитьАвторизациюОдинСертификат",0.1,Истина);	
		Иначе
			сбисВыполнитьАвторизациюОдинСертификат();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура сбисВыполнитьАвторизациюОдинСертификат() Экспорт
	//Чтобы список отрисовался и появились данные на форме, делаем через обработчик ожидания на форме.
	сТекущаяСтрока = СписокСертификатов.Получить(0);
	Если Кэш.ПараметрыСистемы.Клиент.УправляемоеПриложение Тогда
		сТекущаяСтрока = сТекущаяСтрока.ПолучитьИдентификатор();
	КонецЕсли;
	сбисЭлементФормы(ЭтаФорма,"СписокСертификатов").ТекущаяСтрока = сТекущаяСтрока;
	ВыполнитьАвторизацию();	
КонецПроцедуры

//Процедура вызывает авторизацию при выборе сертификата	
&НаКлиенте
Процедура СписокСертификатовВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	ВыполнитьАвторизацию();
КонецПроцедуры

////////////////////////////////
////двухфакторная авторизация///

//Функция выполняет авторизацию на онлайне по сертификату или по логину/паролю	
&НаКлиенте
Функция Авторизоваться(ГлобальныйКэш=Неопределено) Экспорт
	Отказ		= Ложь;
	ТекстОшибки	= "";
	Если Не ГлобальныйКэш = Неопределено Тогда
		Кэш = ГлобальныйКэш;//Берем передаваемый кэш как кэш формы.
	ИначеЕсли Кэш = Неопределено Тогда 
		Кэш = ЭтаФорма.ВладелецФормы.Кэш;//Если нет, то проверим что Кэш определен и если нет, то возьмём у владельца.
	КонецЕсли;
	Если Не Кэш.СБИС.ОбменВключен Тогда
		Ошибка = Новый Структура("code, message, details", 100, "Не включен обмен со СБИС", "Измените способ обмена в настройках соединения.");
		сбисОбновитьОтображение(Новый Структура("ТекстОшибки", Ошибка.message));
		Кэш.ГлавноеОкно.сбисСообщитьОбОшибке(Кэш, Ошибка, Новый Структура("ФормаВладелец, Отправлять", ЭтаФорма, Ложь));
		Возврат Ложь;
	КонецЕсли;
	//AU переделал оценку результата. Методы авторизации возвращают ошибку, не сообщая сразу, или результат авторизации. Оценка того, что вернулось делаем по флагу Отказ
	Если Кэш.Парам.СпособОбмена = 1 Тогда
		Результат = "Ok";
	ИначеЕсли Кэш.Парам.Свойство("ВходПоТокену") Тогда
		Результат = Кэш.Интеграция.АвторизоватьсяПоТокену(Кэш, Отказ);
	ИначеЕсли Кэш.Парам.ВходПоСертификату Тогда
		ВыбранныйСертификат = сбисЭлементФормы(ЭтаФорма,"СписокСертификатов").ТекущиеДанные;
		Если ВыбранныйСертификат=Неопределено и Кэш.Парам.Сертификат="" Тогда
			ОшибкаАвторизации = "Выберите сертификат для авторизации";
			Возврат Ложь;
		КонецЕсли;
		Если ВыбранныйСертификат<>Неопределено Тогда
			Кэш.Парам.Сертификат = ВыбранныйСертификат.Значение.Отпечаток;
		КонецЕсли;
		Результат = Кэш.Интеграция.АвторизоватьсяПоСертификату(Кэш,Кэш.Парам.Сертификат,Отказ);		
	Иначе
		Результат = Кэш.Интеграция.АвторизоватьсяПоЛогинуПаролю(Кэш,Кэш.Парам.Логин,Кэш.Парам.Пароль,Отказ);
	КонецЕсли;
	//Сюда возвращается ошибка, если нужно, сообщаем.   
	Если Отказ Тогда
		ЭтаФорма.ТекущийЭлемент=сбисЭлементФормы(ЭтаФорма,"ПанельДанныеАвторизации");
		ПараметрыОбновления = Новый Структура("ТекстОшибки", "");
		Если Результат.code = 303 Тогда
			ПараметрыОбновления.ТекстОшибки = Результат.message;
			ПараметрыПодтверждения	= Неопределено;
			Если Результат.Свойство("data") Тогда
				ПараметрыПодтверждения	= Результат.data.addinfo;
			КонецЕсли;
			Авторизация_ПодтвердитьВход(ПараметрыПодтверждения);
		Иначе
			ПараметрыОбновления.ТекстОшибки = Результат.details;
			Кэш.ГлавноеОкно.сбисСообщитьОбошибке(Кэш, Результат, Новый Структура("ФормаВладелец, Отправлять", ЭтаФорма, Ложь));
		КонецЕсли;
		сбисОбновитьОтображение(ПараметрыОбновления);//Обновим элементы на случай, если поменялся адрес сервера и переключились на резерв
		Возврат Ложь;
	КонецЕсли;
	ОшибкаАвторизации = "";
	Кэш.Парам.ИдентификаторСессии = Результат;
	Возврат Истина;
КонецФункции

//Процедура вызывает автризацию с выбранными параметрами
&НаКлиенте
Процедура ВыполнитьАвторизацию()
	Если Авторизоваться() Тогда
		Авторизация_Завершение(Новый Структура("ИдентификаторСессии",Кэш.Парам.ИдентификаторСессии));
	КонецЕсли;	
КонецПроцедуры	

//Процедура вызывает подтверждение входа по СМС
&НаКлиенте
Процедура Авторизация_ПодтвердитьВход(ПараметрыПодтверждения)
	Отказ = Ложь;
	РезультатОтправки = Кэш.Интеграция.ОтправитьКодАвторизации(Кэш, ПараметрыПодтверждения, Отказ);
	Если Отказ Тогда
		ОшибкаАвторизации = РезультатОтправки.message; 
		Кэш.ГлавноеОкно.сбисСообщитьОбОшибке(Кэш, РезультатОтправки, Новый Структура("ФормаВладелец, Отправлять", ЭтаФорма, Ложь));
		Возврат;
	КонецЕсли;
	ДополнительныеПараметрыЗавершения = Новый Структура("ПараметрыОперации", ПараметрыПодтверждения);
	ПараметрыВвода = Новый Структура("ЗаголовокВвода, Заголовок, Режим","Код подтверждения", "Для входа введите полученный код из СМС.", "ВводКодаАвторизации");
	ФормаВвода = Кэш.ГлавноеОкно.сбисПолучитьФорму("ФормаВводаПинкода",,,ЭтаФорма);
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		РезультатВвода = ФормаВвода.Показать(ПараметрыВвода);
		Авторизация_Завершение(РезультатВвода, ДополнительныеПараметрыЗавершения);
	#Иначе
		ФормаВвода.ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("Авторизация_Завершение", ЭтаФорма, ДополнительныеПараметрыЗавершения);
		ФормаВвода.Показать(ПараметрыВвода);
	#КонецЕсли
КонецПроцедуры

//Процедура проверяет выполнение авторизации на онлайне и в случае успеха закрывает окно авторизации.
&НаКлиенте
Процедура Авторизация_Завершение(Результат, ДополнительныеПараметры=Неопределено) Экспорт
	
	ИдентификаторСессии = Неопределено;
	Если	ЗначениеЗаполнено(Результат) Тогда
		Если		Результат.Свойство("ИдентификаторСессии", ИдентификаторСессии) Тогда
			//Просто берем переданный СИД
		ИначеЕсли	Результат.Свойство("ПинКод") Тогда 
			//Проверяем полученный код из СМС, если все ок, то берем СИД, если нет то пользователю нужно повторно авторизоваться для получения нового кода и показа формы. Согласование 1175952857.
			Отказ = Ложь;
			РезультатВвода = Кэш.Интеграция.ПодтвердитьАвторизацию(Кэш, Результат, ДополнительныеПараметры.ПараметрыОперации, Отказ);
			Если Отказ Тогда
				ОшибкаАвторизации = РезультатВвода.message; 
				Кэш.ГлавноеОкно.сбисСообщитьОбОшибке(Кэш, РезультатВвода, Новый Структура("ФормаВладелец, Отправлять", ЭтаФорма, Ложь));
			Иначе
				ИдентификаторСессии = РезультатВвода;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(ИдентификаторСессии) Тогда 
		Кэш.Парам.ИдентиФикаторСессии = ИдентификаторСессии;
		Если ЭтаФорма.Открыта() Тогда
			СохранитьПараметрыАвторизации();
			НажатиеВыполнено = Истина;
			ЭтаФорма.Закрыть(ИдентификаторСессии);
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВойтиПоТокену(Команда)
	Кэш.Парам.Вставить("ВходПоТокену", Истина);
	Если Авторизоваться() Тогда
		Авторизация_Завершение(Новый Структура("ИдентификаторСессии",Кэш.Парам.ИдентификаторСессии));
	КонецЕсли;
	Кэш.Парам.Удалить("ВходПоТокену");
КонецПроцедуры

НажатиеВыполнено = Ложь;