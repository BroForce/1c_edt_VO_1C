&НаКлиенте
Перем МестныйКэш Экспорт, ДопПараметры Экспорт;

//Открыть форму отправки
&НаКлиенте
Процедура ПоказатьФорму(Кэш, ДополнительныеПараметры = Неопределено) Экспорт
	Если Не ЗначениеЗаполнено(Кэш) Тогда
		Возврат;
	КонецЕсли;
	МестныйКэш	= Кэш;
	ДопПараметры= ДополнительныеПараметры;
	ЭтаФорма.Открыть();
КонецПроцедуры

//Заполняет дерево значений по справочнику
&НаСервере
Процедура сбисЗаполнитьСписокКонтрагентов(Ини)
	Если Ини.Свойство("ЗапросСпискаКонтрагентов") Тогда
		Запрос = Новый Запрос(СтрЗаменить(Ини.ЗапросСпискаКонтрагентов.Значение,"'", ""));	
	Иначе
		ИмяСправочника = СокрЛП(Сред(Ини.Контрагенты.Значение, Найти(Ини.Контрагенты.Значение, ".")+1));
		ИмяРеквизитаИНН = СокрЛП(Сред(Ини.Контрагенты_ИНН.Значение, Найти(Ини.Контрагенты_ИНН.Значение, ".")+1));
		ИмяРеквизитаКПП = СокрЛП(Сред(Ини.Контрагенты_КПП.Значение, Найти(Ини.Контрагенты_КПП.Значение, ".")+1));
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ ЗаписьСправочника.Ссылка,ЗаписьСправочника.Наименование,ЗаписьСправочника."+ИмяРеквизитаИНН+" КАК ИНН,ЗаписьСправочника."+ИмяРеквизитаКПП+" КАК КПП, Ложь КАК Отмечен ИЗ Справочник."+ИмяСправочника+" КАК ЗаписьСправочника ГДЕ (НЕ(ЗаписьСправочника.ЭтоГруппа) и НЕ ЗаписьСправочника.ПометкаУдаления)ИТОГИ ПО ЗаписьСправочника.Ссылка ТОЛЬКО ИЕРАРХИЯ");
	КонецЕсли;
	//Совместимость кода. На УФ сервере - всегда иначе, на ОФ - работает условие
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Контрагенты = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	#Иначе
		Дерево = РеквизитФормыВЗначение("Контрагенты"); // заполняем Дерево 
		Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		ЗначениеВРеквизитФормы(Дерево, "Контрагенты");
	#КонецЕсли
КонецПроцедуры

//Определяем тип организации, очищаем текст сообщения и список файлов, заполняем список контрагентов
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если МестныйКэш.Ини.Конфигурация.Свойство("Организации") Тогда
		ИмяСправочника = СокрЛП(Сред(МестныйКэш.Ини.Конфигурация.Организации.Значение, Найти(МестныйКэш.Ини.Конфигурация.Организации.Значение, ".")+1));
		ТипСправочника = "СправочникСсылка." + ИмяСправочника;
	Иначе
		ТипСправочника = "СправочникСсылка.Организации";
	КонецЕсли;
	ПутьКЭлементам = "ЭлементыФормы";
	Если МестныйКэш.ПараметрыСистемы.Клиент.УправляемоеПриложение Тогда
		ПутьКЭлементам = "Элементы"
	КонецЕсли;
	ОписаниеТипа = Новый ОписаниеТипов(ТипСправочника);
	ЭтаФорма[ПутьКЭлементам].Организация.ОграничениеТипа= ОписаниеТипа;
	ЭтаФорма[ПутьКЭлементам].Организация.ВыбиратьТип	= Ложь;
	Организация = ОписаниеТипа.ПривестиЗначение();
	
	СписокФайлов.Очистить();
	ТекстСообщения	= "";
	ТипПакета		= "КоррИсх";
	Если ЗначениеЗаполнено(ДопПараметры) Тогда
		Если ДопПараметры.Свойство("СписокФайлов") Тогда
			Для Каждого ФайлДобавить Из ДопПараметры.СписокФайлов Цикл
				Если ТипЗнч(ФайлДобавить) = Тип("Структура") Тогда
					НоваяСтр = СписокФайлов.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтр, ФайлДобавить);
				Иначе
					ДобавитьФайл(ФайлДобавить);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если ДопПараметры.Свойство("Организация") и ЗначениеЗаполнено(ДопПараметры.Организация) Тогда
			Организация = ДопПараметры.Организация;
		КонецЕсли;
		Если ДопПараметры.Свойство("ТипПакета") и ЗначениеЗаполнено(ДопПараметры.ТипПакета) Тогда
			ТипПакета = ДопПараметры.ТипПакета;
		КонецЕсли;
	КонецЕсли;
	сбисЗаполнитьСписокКонтрагентов(МестныйКэш.Ини.Конфигурация);
КонецПроцедуры

// Процедура открывает диалог выбора файлов для отправки
&НаКлиенте
Процедура ДобавитьВложение(Команда)
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие); 
	ДиалогОткрытияФайла.МножественныйВыбор = Истина;
	ДиалогОткрытияФайла.Заголовок = "Выберите файлы";
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			ПослеВыбораФайлов(ДиалогОткрытияФайла.ВыбранныеФайлы, "");
		КонецЕсли;
	#Иначе
		ДиалогОткрытияФайла.Показать(Новый ОписаниеОповещения("ПослеВыбораФайлов", ЭтаФорма));
	#КонецЕсли
КонецПроцедуры

//Процедура добавляет внешний файл в список файлов для отправки
&НаКлиенте
Процедура ПослеВыбораФайлов(МассивФайлов, ДополнительныеПараметры) Экспорт
	Если МассивФайлов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Для Каждого ИмяФайла Из МассивФайлов Цикл
		ДобавитьФайл(ИмяФайла);
	КонецЦикла;
КонецПроцедуры

//Доблавяет описание файла на форму
&НаКлиенте
Процедура ДобавитьФайл(ИмяФайла)
	Файл = Новый Файл(ИмяФайла);
	Если Не Файл.Существует() Тогда
		Сообщить("Не удалось найти файл " + ИмяФайла);
		Возврат;
	КонецЕсли;
	НоваяСтр = СписокФайлов.Добавить();
	НоваяСтр.ПолноеИмяФайла	= Файл.ПолноеИмя;
	НоваяСтр.ИмяФайла		= Файл.Имя;
	НоваяСтр.ПараметрыФайла = Новый СписокЗначений;
КонецПроцедуры

//Отмечает вложенные записи дерева значений при отметке группы
&НаКлиенте
Процедура ПометкаПриИзменении(Элемент)
	ПутьКЭлементам = "ЭлементыФормы";
	Если МестныйКэш.ПараметрыСистемы.Клиент.УправляемоеПриложение Тогда
		ПутьКЭлементам = "Элементы"
	КонецЕсли;
	ТекущиеДанные = ЭтаФорма[ПутьКЭлементам].Контрагенты.ТекущиеДанные;
	ПроставитьПометкиВниз(ТекущиеДанные);
КонецПроцедуры

//Отмечает вложенные записи дерева значений при отметке группы (рекурсивно)
&НаКлиенте
Процедура ПроставитьПометкиВниз(ТекущиеДанные)
	Потомки = МестныйКэш.ГлавноеОкно.сбисПолучитьЭлементыДерева(ТекущиеДанные);
	Значение = ТекущиеДанные.Отмечен;
	Для каждого Потомок из Потомки Цикл
		Потомок.Отмечен = Значение;
		ПроставитьПометкиВниз(Потомок);
	КонецЦикла;
КонецПроцедуры

//Отмечает все записи в дереве значений
&НаКлиенте
Процедура ОтметитьВсеДерево(Команда)
	ОтметитьВсе = Не ОтметитьВсе;
	Потомки = МестныйКэш.ГлавноеОкно.сбисПолучитьЭлементыДерева(Контрагенты);
	Для Каждого Потомок Из Потомки Цикл
		Потомок.Отмечен = ОтметитьВсе;
		ПроставитьПометкиВниз(Потомок);
	КонецЦикла;
КонецПроцедуры

//Получает выбранные строки дерева значений
&НаКлиенте
Процедура ПолучитьВыбранныеСтроки(СписокОтмеченных, Потомки)
	Для каждого Потомок из Потомки Цикл
		ПотомкиПотомка = МестныйКэш.ГлавноеОкно.сбисПолучитьЭлементыДерева(Потомок);	
		Если ПотомкиПотомка.Количество() Тогда
			ПолучитьВыбранныеСтроки(СписокОтмеченных,ПотомкиПотомка);
		ИначеЕсли Потомок.Отмечен Тогда
			СписокОтмеченных.Добавить(Потомок.Ссылка);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

//Открывает карточку справочника
&НаКлиенте
Процедура ОткрытьЗаписьСправочника(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ОткрытьЗначение(ВыбраннаяСтрока.Ссылка);
	#Иначе                 
		ПоказатьЗначение(Неопределено, Элемент.ТекущиеДанные.Ссылка);
	#КонецЕсли
КонецПроцедуры

//Отправка корреспонденции по списку контрагентов
&НаКлиенте
Процедура Отправить(Команда)
	УзелИниОрганизации	= Неопределено;
	УзелИниКонтрагент	= Неопределено;
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Сообщить("Укажите организацию - отправителя");
		Возврат;
	ИначеЕсли Не(	МестныйКэш.Ини.Конфигурация.Свойство("мСторона")
		        И	МестныйКэш.Ини.Конфигурация.мСторона.Свойство("Контрагент",		УзелИниКонтрагент)
				И	МестныйКэш.Ини.Конфигурация.мСторона.Свойство("НашаОрганизация",УзелИниОрганизации)) Тогда
		Сообщить("В файле настроек конфигурации не указаны настройки для отправки корреспонденции");
		Возврат;	
	КонецЕсли;
	// получаем список отмеченных контрагентов
	СписокОтмеченных = Новый СписокЗначений;
	ПолучитьВыбранныеСтроки(СписокОтмеченных, МестныйКэш.ГлавноеОкно.сбисПолучитьЭлементыДерева(Контрагенты));	
	Если Не СписокОтмеченных.Количество() Тогда
		Сообщить("Отметьте получателей корреспонденции в списке контрагентов.");
		Возврат;	
	КонецЕсли;
	// кладем данные по организации и контрагентам в соответствие для последующего рассчета данных по инишке на сервере
	СоставПакета = Новый СписокЗначений;
	СоставПакета.Добавить(Организация);
	СоответствиеДанные = Новый Соответствие;
	СоответствиеДанные.Вставить(Организация, Новый Структура("ИмяИни,ДокументДанные","НашаОрганизация", УзелИниОрганизации));
	Для Каждого Элемент Из СписокОтмеченных Цикл
		СоставПакета.Добавить(Элемент.Значение);
		СоответствиеДанные.Вставить(Элемент.Значение, Новый Структура("ИмяИни,ДокументДанные","Контрагент",УзелИниКонтрагент));
	КонецЦикла;
	МестныйКэш.ОбщиеФункции.ПолучитьДанныеДокументов1С(СоответствиеДанные, Новый Структура("ТекущийПакет",Новый Структура), СоставПакета, Новый Структура);
	// формируем пакеты
	МассивОшибок		= Новый Массив;
	СписокПолучателей	= Новый Массив;
	Для Каждого Элемент Из СоответствиеДанные Цикл
		Сторона = МестныйКэш.ОбщиеФункции.ПолучитьСторону(МестныйКэш,Элемент.Значение.ДокументДанные);     
		Если Элемент.Ключ = Организация Тогда
			Если Сторона = Неопределено Тогда
				Сообщить("Не заполнены данные организации");
				Возврат;
			КонецЕсли;
			НашаОрганизация = Сторона;
		ИначеЕсли Сторона = Неопределено Тогда
			МассивОшибок.Добавить(Новый Структура("ТекстОшибки, Ссылка1С", "Не заполнен ИНН", Элемент.Ключ));
		Иначе
			СписокПолучателей.Добавить(Сторона);
		КонецЕсли;
	КонецЦикла;
	МассивПакетов				= Новый Массив;
	КорреспонденцияПоПолучателям= Новый Соответствие;
	Для Каждого Контрагент Из СписокПолучателей Цикл
		КлючПолучателя = МестныйКэш.ОбщиеФункции.сбисРасширениеXSLTПолучателя(Контрагент);
		Если КлючПолучателя = Неопределено Тогда
			КлючПолучателя = НашаОрганизация;
		КонецЕсли;
		КорреспонденцияКОтправке= КорреспонденцияПоПолучателям.Получить(КлючПолучателя);
		Если КорреспонденцияКОтправке = Неопределено Тогда
			КорреспонденцияКОтправке = Новый Массив;
			Отказ = Ложь;
			//Для вложений, которые требует конвертации в XML, создадим временные файлы.
			Для Каждого Строка Из СписокФайлов Цикл
				сбисВложение	= Неопределено;
				СтруктураФайла	= Неопределено;
				Для Каждого ПараметрФайла Из Строка.ПараметрыФайла Цикл
					Если ПараметрФайла.Представление = "Вложение" Тогда
						сбисВложение = ПараметрФайла.Значение;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Если	Не ЗначениеЗаполнено(сбисВложение)
					Или Не сбисВложение.Свойство("СтруктураФайла", СтруктураФайла) Тогда
					КорреспонденцияКОтправке.Добавить(Новый Структура("ПолноеИмяФайла,ИмяФайла", Строка.ПолноеИмяФайла,Строка.ИмяФайла));
					Продолжить;
				КонецЕсли;
				сбисВложение.Вставить("Получатель", Контрагент);
				XSLT_Имя = МестныйКэш.ОбщиеФункции.сбисИмяXSLTДляВложения(МестныйКэш, СтруктураФайла.Файл, сбисВложение);
				ДопПараметрыПреобразования = Новый Структура;
				Если сбисВложение.ОписаниеФайла.Свойство("Кодировка") Тогда
					ДопПараметрыПреобразования.Вставить("Кодировка", сбисВложение.ОписаниеФайла.Кодировка);
				КонецЕсли;
				//Костыль для старой отправки файла прайса - формируем с простыми элементами и только коммерческую информацию
				СтруктураФайлаКОтправке = СтруктураФайла;
				Если Лев(XSLT_Имя, 10) = "CommerceML" Тогда
					СтруктураФайлаКОтправке = Новый Структура("КоммерческаяИнформация");
					ЗаполнитьЗначенияСвойств(СтруктураФайлаКОтправке, СтруктураФайла.Файл);
					ДопПараметрыПреобразования.Вставить("СПростымиЭлементами", Истина);
				КонецЕсли;
				XML_Шаблон = МестныйКэш.ОбщиеФункции.сбисПолучитьXMLФайлаИзСтруктурыПоИмениXSLT_Клиент(МестныйКэш, СтруктураФайлаКОтправке, XSLT_Имя, ДопПараметрыПреобразования, Отказ);
				Если Отказ Тогда
					МассивОшибок.Добавить(Новый Структура("НашаОрганизация, Ошибка, Ссылка1С", НашаОрганизация, XML_Шаблон.message, Неопределено));
					Прервать;
				КонецЕсли;
				ПараметрыФайлаКЗаписи = Новый Структура;
				МестныйКэш.ОбщиеФункции.сбисСкопироватьСтруктуруНаКлиенте(ПараметрыФайлаКЗаписи, сбисВложение.ОписаниеФайла);
				ПараметрыФайлаКЗаписи.Вставить("Данные", XML_Шаблон);
				ПараметрыФайлаКЗаписи.Имя = ПараметрыФайлаКЗаписи.Имя + "_" + XSLT_Имя;
				XML_Описание = МестныйКэш.ОбщиеФункции.сбисЗаписатьФайл_Клиент(МестныйКэш, ПараметрыФайлаКЗаписи, Отказ);
				КорреспонденцияКОтправке.Добавить(Новый Структура("ПолноеИмяФайла,ИмяФайла", XML_Описание.ПолноеИмя,XML_Описание.Имя));
			КонецЦикла;
			Если Отказ Тогда
				Продолжить;
			КонецЕсли;
			КорреспонденцияПоПолучателям.Вставить(КлючПолучателя, КорреспонденцияКОтправке);
		КонецЕсли;
		МассивПакетов.Добавить(Новый Структура("НашаОрганизация,Контрагент,Тип,Вложение,Примечание", НашаОрганизация, Контрагент, ТипПакета, КорреспонденцияКОтправке, ТекстСообщения));
	КонецЦикла;
	
	Для Каждого Ошибка Из МассивОшибок Цикл
		МассивПакетов.Добавить(Новый Структура("НашаОрганизация,Ошибка, Ссылка1С, Вложение",НашаОрганизация, Ошибка.ТекстОшибки, Ошибка.Ссылка1С, Новый Массив));
	КонецЦикла;
	
	МестныйКэш.СписокНоменклатуры.Очистить();
	ВремяНачала = МестныйКэш.ОбщиеФункции.сбисТекущаяДатаВМиллисекундах(МестныйКэш);
	РезультатОтправки = Новый Структура("ТипыОшибок,Отправлено,НеОтправлено,НеСформировано,Ошибок,ДетализацияОшибок,ВсегоПакетов,ОшибкиДоОтправки,ДанныеПоСтатусам,ПорНомер,КоличествоСвободныхПотоков,ОтправленоСообщений,ПолученоОтветов,ВремяНачала,ВремяФормирования,ВремяОтправки,ДетализацияОтправки,ВремяЗаписиСтатусов,ВремяПолученияДанных,ВремяОжиданияОтвета, СформированныеПакеты", Новый СписокЗначений,0,0,0,0, Новый Соответствие,0,0,Новый Массив,0,МестныйКэш.КоличествоПотоковОтправки,0,0,ВремяНачала,0,0, Новый Соответствие,0,0,0, Новый Соответствие);
	РезультатОтправки.Вставить("НаЗаписьСтатусов", Новый Структура("Ошибки, Ответы", Новый Соответствие, Новый Соответствие));
	МестныйКэш.Вставить("РезультатОтправки",РезультатОтправки);
	
	// отправляем документы
	МестныйКэш.ГлавноеОкно.сбисПолучитьФорму("Документ_Шаблон").ОтправитьПодготовленныеПакетыДокументы(МестныйКэш, МассивПакетов);
КонецПроцедуры
