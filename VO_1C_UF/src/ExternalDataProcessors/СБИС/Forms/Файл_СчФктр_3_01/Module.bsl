// функции для совместимости кода 
&НаКлиенте
Функция сбисПолучитьФорму(ИмяФормы)
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		Попытка
			ЭтотОбъект="";
		Исключение
		КонецПопытки;
		Возврат ПолучитьФорму("ВнешняяОбработка.СБИС.Форма."+ИмяФормы);
	КонецЕсли;
	Возврат ЭтотОбъект.ПолучитьФорму(ИмяФормы);
КонецФункции
//------------------------------------------------------
//------------------------------------------------------
&НаКлиенте
Функция ПолучитьДанныеИзДокумента1С(Кэш,Контекст) Экспорт
	// Функция формирует структуру табличной части файла СФ по документам-основаниям
	Попытка	
		// проверяем надо ли пересчитывать суммы в валюту учета
		Валюта = Кэш.ОбщиеФункции.РассчитатьЗначение("Валюта", Контекст.ФайлДанные,Кэш);
		ВалютаУчета = Кэш.ОбщиеФункции.РассчитатьЗначение("ВалютаУчета", Контекст.ФайлДанные,Кэш);
		Если ЗначениеЗаполнено(Валюта) и ЗначениеЗаполнено(ВалютаУчета) и Валюта<>ВалютаУчета Тогда
			ПересчитатьВВалютеУчета = Кэш.ОбщиеФункции.РассчитатьЗначение("ПересчитатьВВалютеУчета", Контекст.ФайлДанные,Кэш);
		Иначе
			ПересчитатьВВалютеУчета = Ложь;
		КонецЕсли;
		Если ПересчитатьВВалютеУчета=Истина Тогда
			Если Контекст.ФайлДанные.Свойство("Валюта_КодОКВ") и Контекст.ФайлДанные.Свойство("ВалютаУчета_КодОКВ") Тогда
				Контекст.ФайлДанные.Валюта_КодОКВ = Контекст.ФайлДанные.ВалютаУчета_КодОКВ;
			КонецЕсли;
		КонецЕсли;
	
		Контекст.Вставить("ТаблДок",Новый Структура());
		Контекст.ТаблДок.Вставить("ИтогТабл",Новый Массив);
		Контекст.ТаблДок.Вставить("СтрТабл",Новый Массив);
		Контекст.Вставить("ИтогСумма",0);
		Контекст.Вставить("ИтогСуммаБезНалога",0);
		Контекст.Вставить("ИтогСуммаНДС",0);
		Контекст.Вставить("ИтогКоличество",0);
		Контекст.Вставить("ИтогБрутто",0);
		Контекст.Вставить("ИтогНетто",0);
		Контекст.Вставить("ИтогКолМест",0);
		
		Контекст.Вставить("ПредИтогСумма",0);
		Контекст.Вставить("ПредИтогСуммаБезНалога",0);
		Контекст.Вставить("ПредИтогСуммаНДС",0);

		Контекст.Вставить("НДСИсчисляетсяАгентом", Кэш.ОбщиеФункции.РассчитатьЗначение("НДСИсчисляетсяАгентом", Контекст.ФайлДанные) = Истина);
		Документ = Контекст.Документ;
		ини = Контекст.ФайлДанные;
		
		УказанТипНоменклатуры = Ложь;
		КолТоваров = 0;
		сч = 1;
    		
		Для Каждого Параметр Из Контекст.ФайлДанные.мТаблДок Цикл
			
			ТабЧасть = Новый Массив;
			Если ТипЗнч(Параметр.Значение)=Тип("Массив") Тогда
				ТабЧасть = Параметр.Значение	
			Иначе
				ТабЧасть.Добавить(Параметр.Значение); // если у СФ только 1 основание
			КонецЕсли;
			МассивИд = Новый Массив;
			// Перебираем документы-основания, из каждого добавляем табличную часть в СФ
			Для Каждого ДокОсн Из ТабЧасть Цикл
				ДокОснование = ДокОсн.ТаблДок_ДокументОснование;
				ИмяДокумента = Кэш.ОбщиеФункции.ПолучитьРеквизитМетаданныхОбъекта(ДокОснование, "Имя");
				ИниДокумента = ИмяДокумента;
				Попытка
					Если Кэш.ФормаНастроек.Ини(Кэш, Кэш.Текущий.ТипДок).Свойство(ИниДокумента) Тогда
						ИниДокумента = Кэш.ОбщиеФункции.РассчитатьЗначение(ИмяДокумента,Кэш.ФормаНастроек.Ини(Кэш, Кэш.Текущий.ТипДок),Кэш);
					КонецЕсли;
				Исключение
				КонецПопытки;
				Если Контекст.ДокументДанные.Свойство(ИмяДокумента) Тогда
					ИниДокумента = Кэш.ОбщиеФункции.РассчитатьЗначение(ИмяДокумента,Контекст.ДокументДанные,Кэш);
				КонецЕсли;
				Если Не Кэш.ини.Свойство(ИниДокумента) Тогда
					Сообщить("Основанием документа "+строка(Контекст.Документ)+" является "+строка(ДокОснование)+". Отсутствует настройка для формирования электронных документов данного типа.");
					Возврат Ложь;
				КонецЕсли;
				ДокументДанные = Неопределено;
				// Проверяем, есть ли в кэше по пакету данные по документу-основанию
				Если Кэш.КэшЗначенийИни.ТекущийПакет.Свойство("СоответствиеДокументДанные") Тогда
					КэшПоОснованию = Кэш.КэшЗначенийИни.ТекущийПакет.СоответствиеДокументДанные.Получить(ДокОснование);
					Если КэшПоОснованию <> Неопределено и КэшПоОснованию.ИмяИни = ИниДокумента Тогда
						ДокументДанные = КэшПоОснованию.ДокументДанные;
					КонецЕсли;
				КонецЕсли;
				Если ДокументДанные = Неопределено Тогда
					ЗначениеИни = Кэш.ФормаНастроек.Ини(Кэш, ИниДокумента);
					ЗначениеИни.Вставить("Формат2016", Новый Структура("Значение,РассчитанноеЗначение", Истина, Истина));
					ЗначениеИни.Вставить("Формат2019", Новый Структура("Значение,РассчитанноеЗначение", Истина, Истина));
					ЗначениеИни.Вставить("ФорматУКД2020", Новый Структура("Значение,РассчитанноеЗначение", Кэш.Парам.ФорматУКД2020, Кэш.Парам.ФорматУКД2020));
					ДокументДанные = Кэш.ОбщиеФункции.ПолучитьДанныеДокумента1С(ЗначениеИни, ДокОснование, Кэш.КэшЗначенийИни, Кэш.Парам);  // alo Меркурий
				КонецЕсли;
				ВременныйКонтекст = Новый Структура();
				ВременныйКонтекст.Вставить("СФ",Контекст.ФайлДанные.Документ);
				ВременныйКонтекст.Вставить("Документ",ДокОснование);
				ВременныйКонтекст.Вставить("ДокументДанные", ДокументДанные);
				ВременныйКонтекст.Вставить("ФайлДанные", Новый Структура);
				ВременныйКонтекст.Вставить("ИтогСумма",0);
				ВременныйКонтекст.Вставить("ИтогСуммаБезНалога",0);
				ВременныйКонтекст.Вставить("ИтогСуммаНДС",0);
				ВременныйКонтекст.Вставить("ИтогКоличество",0);
				ВременныйКонтекст.Вставить("ИтогБрутто",0);
				ВременныйКонтекст.Вставить("ИтогНетто",0);
				ВременныйКонтекст.Вставить("ИтогКолМест",0);
				ВременныйКонтекст.Вставить("ПредИтогСумма",0);
				ВременныйКонтекст.Вставить("ПредИтогСуммаБезНалога",0);
				ВременныйКонтекст.Вставить("ПредИтогСуммаНДС",0);
				ВременныйКонтекст.Вставить("ТаблДок",Новый Структура());
				ВременныйКонтекст.ТаблДок.Вставить("СтрТабл",Новый Массив);
				
				//Подменяем во временном контексте признак необходимости пересчета в валюту, т.к. для фактуры и накладной он может отличаться
				Для Каждого Файл Из ВременныйКонтекст.ДокументДанные.мФайл Цикл
					Файл = Файл.Значение;
					Если Файл.Свойство("ПересчитатьВВалютеУчета") Тогда
						Файл.ПересчитатьВВалютеУчета = ПересчитатьВВалютеУчета;
					КонецЕсли;
				КонецЦикла;
				
				фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("ПрочитатьТабличнуюЧасть","Документ_"+ИмяДокумента,"Документ_Шаблон",Кэш);
				Если не фрм.ПрочитатьТабличнуюЧасть(Кэш,ВременныйКонтекст) Тогда
					Возврат Ложь;
				КонецЕсли;
				
				Для Каждого Строка Из ВременныйКонтекст.ТаблДок.СтрТабл Цикл
					Если Строка.Свойство("Тип") Тогда
						УказанТипНоменклатуры = Истина;
						Если Строка.Тип = "1" Тогда
							КолТоваров = КолТоваров+1;
						КонецЕсли;
					КонецЕсли;
					Если Контекст.ФайлДанные.Свойство("СвернутьКолонкиГруппировок") и Контекст.ФайлДанные.Свойство("СвернутьКолонкиСуммирования") Тогда
						//Если есть задача свернуть колонки, то сформируем ключ поиска
						МассивКолонок = Кэш.ОбщиеФункции.РазбитьСтрокуВМассивНаКлиенте(Контекст.ФайлДанные.СвернутьКолонкиГруппировок, ",");
						ИдСтроки = "";
						Для каждого ИмяКолонки из МассивКолонок Цикл
							ПозТочки = Найти(ИмяКолонки, ".");
							Если ПозТочки > 0 Тогда
								ИдСтроки = ИдСтроки + Строка[Лев(ИмяКолонки, ПозТочки - 1)][Сред(ИмяКолонки, ПозТочки + 1)];
							Иначе	
								ИдСтроки = ИдСтроки + СокрЛП(Строка[ИмяКолонки]);
							КонецЕсли;	
						КонецЦикла;
						ИндексМассива = МассивИд.Найти(ИдСтроки);
						Если ИндексМассива = Неопределено  Тогда //Если не нашли по индексу добавляем всю стр целеком							
							Контекст.ТаблДок.СтрТабл.Добавить(Строка);
							МассивИд.Добавить(ИдСтроки);
						Иначе
							НайденаяСтрока = Контекст.ТаблДок.СтрТабл[ИндексМассива];
							//иначе суммируем необходимые значения
							МассивКолонок = Кэш.ОбщиеФункции.РазбитьСтрокуВМассивНаКлиенте(Контекст.ФайлДанные.СвернутьКолонкиСуммирования, ",");
							Для каждого ИмяКолонки из МассивКолонок Цикл
								ПозТочки = Найти(ИмяКолонки, ".");
								Если ПозТочки > 0 Тогда
									НайденаяСтрока[Лев(ИмяКолонки, ПозТочки - 1)][Сред(ИмяКолонки, ПозТочки + 1)] = Число(НайденаяСтрока[Лев(ИмяКолонки, ПозТочки - 1)][Сред(ИмяКолонки, ПозТочки + 1)]) + Число(Строка[Лев(ИмяКолонки, ПозТочки - 1)][Сред(ИмяКолонки, ПозТочки + 1)]);
								Иначе	
									НайденаяСтрока[ИмяКолонки] = Число(НайденаяСтрока[ИмяКолонки]) + Число(Строка[ИмяКолонки]);
								КонецЕсли;	
								// alo
								Если ИмяКолонки="Сумма" тогда
									НайденаяСтрока[ИмяКолонки] = Формат(НайденаяСтрока[ИмяКолонки], "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
								КонецЕсли;
								Если ИмяКолонки="НДС.Сумма" тогда
									НайденаяСтрока["НДС"]["Сумма"] = Формат(НайденаяСтрока["НДС"]["Сумма"], "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"); 
								КонецЕсли;
							КонецЦикла;	
						КонецЕсли;	
					Иначе
						Строка.Вставить("ПорНомер",Формат(сч, "ЧГ=0"));
						Контекст.ТаблДок.СтрТабл.Добавить(Строка);
					КонецЕсли;				
					сч = сч + 1;
				КонецЦикла;
				Контекст.ИтогСумма = Контекст.ИтогСумма+ВременныйКонтекст.ИтогСумма;
				Контекст.ИтогСуммаБезНалога = Контекст.ИтогСуммаБезНалога+ВременныйКонтекст.ИтогСуммаБезНалога;
				Контекст.ИтогСуммаНДС = Контекст.ИтогСуммаНДС+ВременныйКонтекст.ИтогСуммаНДС;
				Если ВременныйКонтекст.Свойство("ЕстьПредыдущиеДанные") Тогда
					Если Не Контекст.Свойство("ЕстьПредыдущиеДанные") Тогда
						Контекст.Вставить("ЕстьПредыдущиеДанные", Истина);
					КонецЕсли;
					Контекст.ПредИтогСумма = Контекст.ПредИтогСумма+ВременныйКонтекст.ПредИтогСумма;
					Контекст.ПредИтогСуммаБезНалога = Контекст.ПредИтогСуммаБезНалога+ВременныйКонтекст.ПредИтогСуммаБезНалога;
					Контекст.ПредИтогСуммаНДС = Контекст.ПредИтогСуммаНДС+ВременныйКонтекст.ПредИтогСуммаНДС;
				КонецЕсли;

				Если Не Контекст.ФайлДанные.мСторона.Свойство("Грузоотправитель") Тогда // берем грузоотправителя и грузополучателя с основания СФ
					Если ВременныйКонтекст.ДокументДанные.Свойство("мФайл")	Тогда
						счСторон = 0;
						Для Каждого Элемент Из ВременныйКонтекст.ДокументДанные.мФайл Цикл
							Если Элемент.Значение.Свойство("мТаблДок") Тогда
								Если (Элемент.Значение.мТаблДок.Свойство("Товары") и Элемент.Значение.мТаблДок.Товары.Количество()>0) или (УказанТипНоменклатуры и КолТоваров>0) Тогда
									Если Элемент.Значение.Свойство("мСторона") и Элемент.Значение.мСторона.Свойство("Грузоотправитель") Тогда
										Контекст.ФайлДанные.мСторона.Вставить("Грузоотправитель", Новый Структура);
										Кэш.ОбщиеФункции.сбисСкопироватьСтруктуруНаКлиенте(Контекст.ФайлДанные.мСторона.Грузоотправитель,Элемент.Значение.мСторона.Грузоотправитель);
										счСторон = счСторон + 1;
									КонецЕсли;
									Если Элемент.Значение.Свойство("мСторона") и Элемент.Значение.мСторона.Свойство("Грузополучатель") Тогда
										Контекст.ФайлДанные.мСторона.Вставить("Грузополучатель", Новый Структура);
										Кэш.ОбщиеФункции.сбисСкопироватьСтруктуруНаКлиенте(Контекст.ФайлДанные.мСторона.Грузополучатель,Элемент.Значение.мСторона.Грузополучатель);
										счСторон = счСторон + 1;
									КонецЕсли;
									Если счСторон > 0 Тогда    // прерываем, когда заполнили данные с какого-либо основания
										Прервать;
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		Если УказанТипНоменклатуры = Ложь или (УказанТипНоменклатуры и КолТоваров>0) Тогда
			Контекст.Вставить("ЗаполнятьГрузотпрГрузполуч", Истина);
		Иначе
			Контекст.Вставить("ЗаполнятьГрузотпрГрузполуч", Ложь);
		КонецЕсли;

		
		ИтогТабл=Новый Структура;
		ИтогТабл.Вставить("Сумма", Формат(Контекст.ИтогСумма, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));	
		ИтогТабл.Вставить("СуммаБезНал", Формат(Контекст.ИтогСуммаБезНалога, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));
		ИтогТабл.Вставить("НДС",Новый Структура);
		ИтогТабл.НДС.Вставить("Сумма",Формат(Контекст.ИтогСуммаНДС, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));
		Если Контекст.Свойство("ЕстьПредыдущиеДанные") Тогда
			ПредИтогТабл=Новый Структура;
			ПредИтогТабл.Вставить("Сумма", Формат(Контекст.ПредИтогСумма, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));	
			ПредИтогТабл.Вставить("СуммаБезНал", Формат(Контекст.ПредИтогСуммаБезНалога, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));
			ПредИтогТабл.Вставить("НДС",Новый Структура);
			ПредИтогТабл.НДС.Вставить("Сумма",Формат(Контекст.ПредИтогСуммаНДС, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));	
			ИтогТабл.Вставить("ПредИтогТабл",ПредИтогТабл);
			Контекст.Удалить("ЕстьПредыдущиеДанные");
		КонецЕсли;
		//Контекст.ТаблДок.Вставить("ИтогТабл",Новый Массив);
		Контекст.ТаблДок.ИтогТабл.Добавить(ИтогТабл);
		Если Контекст.ТаблДок.СтрТабл.Количество() = 0 Тогда//нет такого документа
			Возврат Истина;
		КонецЕсли;
		Возврат ПолучитьШапкуИзДокумента1С(Кэш,Контекст);		
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
КонецФункции
&НаКлиенте
Функция ПолучитьШапкуИзДокумента1С(Кэш,Контекст) Экспорт
	Перем СбисНДСИсчисляетсяАгентом;
	// Функция формирует структуру выгружаемого файла и добавляет его в состав пакета
	Попытка	
		Док  = Новый Структура;
		Док.Вставить("Файл",Новый Структура);
		Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Файл",Контекст.ФайлДанные,Док.Файл);
		Док.Файл.Вставить("Документ",Новый Структура);
		Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Документ",Контекст.ФайлДанные,Док.Файл.Документ);
		Док.Файл.Документ.Вставить("Основание",Новый Массив);
		
		Валюта =  Кэш.ОбщиеФункции.РассчитатьЗначение("Валюта_КодОКВ", Контекст.ФайлДанные, Кэш);
		Если ЗначениеЗаполнено(Валюта) Тогда
			Док.Файл.Документ.Вставить("Валюта",Новый Структура);
			Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Валюта",Контекст.ФайлДанные,Док.Файл.Документ.Валюта);
		КонецЕсли;
		Если Не Контекст.Свойство("НДСИсчисляетсяАгентом", СбисНДСИсчисляетсяАгентом) Тогда
			СбисНДСИсчисляетсяАгентом = Кэш.ОбщиеФункции.РассчитатьЗначение("НДСИсчисляетсяАгентом", Контекст.ФайлДанные) = Истина;
		КонецЕсли;

		Отправитель = "";
		Получатель = "";
		ОтправительРоль=Кэш.ОбщиеФункции.РассчитатьЗначение("Отправитель_Роль", Контекст.ФайлДанные, Кэш);
		ПолучательРоль=Кэш.ОбщиеФункции.РассчитатьЗначение("Получатель_Роль", Контекст.ФайлДанные, Кэш);
		Если Не ЗначениеЗаполнено(ОтправительРоль) Тогда
			ОтправительРоль = "Отправитель";
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ПолучательРоль) Тогда
			ПолучательРоль = "Получатель";
		КонецЕсли;
		Для Каждого Параметр Из Контекст.ФайлДанные.мСторона Цикл
			Если Параметр.Значение.Свойство("Роль") Тогда
				Роль = Кэш.ОбщиеФункции.РассчитатьЗначение("Роль",Параметр.Значение,Кэш);
			Иначе
				Роль = Кэш.ОбщиеФункции.РассчитатьЗначение("Сторона_Роль",Параметр.Значение,Кэш);
			КонецЕсли;
			Если Роль = ОтправительРоль Тогда
				Сертификат = Кэш.ОбщиеФункции.РассчитатьЗначение("Сертификат",Параметр.Значение,Кэш);
			КонецЕсли;
			Сторона = Кэш.ОбщиеФункции.ПолучитьСторону(Кэш,Параметр.Значение);
			Если Сторона<>Неопределено Тогда
				Док.Файл.Документ.Вставить(Роль,Сторона);
			КонецЕсли;
		КонецЦикла;
		Если Не Док.Файл.Документ.Свойство(ПолучательРоль) Тогда
			Сообщить("Не удалось определить ИНН получателя документа "+строка(Контекст.Документ));
			Возврат Ложь;
		КонецЕсли;
		Если Не Док.Файл.Документ.Свойство(ОтправительРоль) Тогда
			Сообщить("Не удалось определить ИНН отправителя документа "+строка(Контекст.Документ));
			Возврат Ложь;
		КонецЕсли;
		
		// Если Грузоотправитель и грузополучатель нужны, но они не попали в файл, то берем их с отправителя и получателя
		Если Не Контекст.Свойство("ЗаполнятьГрузотпрГрузполуч") или (Контекст.Свойство("ЗаполнятьГрузотпрГрузполуч") и Контекст.ЗаполнятьГрузотпрГрузполуч = Истина) Тогда
			Если Контекст.ФайлДанные.мСторона.Свойство("Грузоотправитель") и Не Док.Файл.Документ.Свойство("Грузоотправитель") и Док.Файл.Документ.Свойство(ОтправительРоль) Тогда
				Док.Файл.Документ.Вставить("Грузоотправитель",Новый Структура);		
				Кэш.ОбщиеФункции.сбисСкопироватьСтруктуруНаКлиенте(Док.Файл.Документ.Грузоотправитель,Док.Файл.Документ[ОтправительРоль]);
			КонецЕсли;
			Если Контекст.ФайлДанные.мСторона.Свойство("Грузополучатель") и Не Док.Файл.Документ.Свойство("Грузополучатель") и Док.Файл.Документ.Свойство(ПолучательРоль) Тогда
				Док.Файл.Документ.Вставить("Грузополучатель",Новый Структура);		
				Кэш.ОбщиеФункции.сбисСкопироватьСтруктуруНаКлиенте(Док.Файл.Документ.Грузополучатель,Док.Файл.Документ[ПолучательРоль]);
			КонецЕсли;
		КонецЕсли;
		
		Отправитель = Док.Файл.Документ[ОтправительРоль]; 
		Получатель = Док.Файл.Документ[ПолучательРоль];

		Если Док.Файл.Свойство("Имя") Тогда
			Если Контекст.ФайлДанные.Свойство("мСторона") и Док.Файл.Документ[ПолучательРоль].Свойство("Идентификатор") и Док.Файл.Документ[ОтправительРоль].Свойство("Идентификатор") Тогда
				Док.Файл.Имя = Док.Файл.Имя + Док.Файл.Документ[ПолучательРоль].Идентификатор+"_"+Док.Файл.Документ[ОтправительРоль].Идентификатор;
			КонецЕсли;
			Док.Файл.Имя = Док.Файл.Имя+"_"+Формат(ТекущаяДата(),"ДФ=ггггММдд")+"_"+строка(Новый УникальныйИдентификатор());
		КонецЕсли;
		
		Если Контекст.ФайлДанные.Свойство("мОснование") Тогда
			Для Каждого Параметр Из Контекст.ФайлДанные.мОснование Цикл
				Если ТипЗнч(Параметр.Значение) = Тип("Массив") Тогда
					Для Каждого Элемент Из Параметр.Значение Цикл
						Кэш.ОбщиеФункции.сбисСкопироватьСтруктуруНаКлиенте(Контекст.ФайлДанные,Элемент);
						Основание = Новый Структура();
						Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Основание",Элемент,Основание);
						Док.Файл.Документ.Основание.Добавить(Основание);	
					КонецЦикла;
				Иначе
					Кэш.ОбщиеФункции.сбисСкопироватьСтруктуруНаКлиенте(Контекст.ФайлДанные,Параметр.Значение);
					Основание = Новый Структура();
					Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Основание",Контекст.ФайлДанные,Основание);
					Док.Файл.Документ.Основание.Добавить(Основание);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Если Контекст.ФайлДанные.Свойство("мПараметр") Тогда
			Док.Файл.Документ.Вставить("Параметр",Новый Массив);
			Для Каждого Элемент Из Контекст.ФайлДанные.мПараметр Цикл
				Кэш.ОбщиеФункции.сбисСкопироватьСтруктуруНаКлиенте(Контекст.ФайлДанные,Элемент.Значение);
				Параметр = Новый Структура();
				Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Параметр",Контекст.ФайлДанные,Параметр);
				Док.Файл.Документ.Параметр.Добавить(Параметр);
			КонецЦикла;
		КонецЕсли;
		
		ОтветственныйСтруктура = Кэш.ОбщиеФункции.ПолучитьСтруктуруОтветственного(Кэш,Контекст);
		ПодразделениеСтруктура = Кэш.ОбщиеФункции.ПолучитьСтруктуруПодразделения(Кэш,Контекст);
		РегламентСтруктура = Кэш.ОбщиеФункции.ПолучитьСтруктуруРегламента(Кэш,Контекст);
		ОснованияМассив = Кэш.ОбщиеФункции.ПолучитьМассивОснований(Кэш,Контекст);
		ДатаВложения = ?(Док.Файл.Документ.Свойство("Дата"), Док.Файл.Документ.Дата, "");
		НомерВложения = ?(Док.Файл.Документ.Свойство("Номер"), Док.Файл.Документ.Номер, "");
		Если СбисНДСИсчисляетсяАгентом Тогда
			СуммаВложения = Формат(Контекст.ИтогСуммаБезНалога, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
		Иначе
			СуммаВложения = Формат(Контекст.ИтогСумма, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
		КонецЕсли;
		НазваниеВложения = ?(Док.Файл.Документ.Свойство("Название"), Док.Файл.Документ.Название+" № "+НомерВложения+" от "+ДатаВложения+" на сумму "+СуммаВложения, "");
		Тип = Кэш.ОбщиеФункции.РассчитатьЗначение("Вложение_Тип", Контекст.ФайлДанные,Кэш);
		ПодТип = Кэш.ОбщиеФункции.РассчитатьЗначение("Вложение_ПодТип", Контекст.ФайлДанные,Кэш);
		ВерсияФормата = Кэш.ОбщиеФункции.РассчитатьЗначение("Вложение_ВерсияФормата", Контекст.ФайлДанные,Кэш);
		ПодВерсияФормата = Кэш.ОбщиеФункции.РассчитатьЗначение("Вложение_ПодВерсияФормата", Контекст.ФайлДанные,Кэш);
		Примечание = Кэш.ОбщиеФункции.РассчитатьЗначение("Примечание", Контекст.ФайлДанные,Кэш);
		Провести = Кэш.ОбщиеФункции.РассчитатьЗначение("Провести", Контекст.ФайлДанные,Кэш); // alo Провести
		
		Док.Файл.Документ.Вставить("ТаблДок",Контекст.ТаблДок);
		Вложение = Новый Структура("СтруктураДокумента,Отправитель,Получатель,Ответственный,Подразделение,Регламент,ДокументОснование, Документ1С, Название, Тип, ПодТип, ВерсияФормата,ПодВерсияФормата,Дата,Номер,Сумма", Док,Отправитель,Получатель,ОтветственныйСтруктура,ПодразделениеСтруктура,РегламентСтруктура,ОснованияМассив, Контекст.Документ, НазваниеВложения, Тип, ПодТип, ВерсияФормата,ПодВерсияФормата,ДатаВложения,НомерВложения,СуммаВложения);
		Если ЗначениеЗаполнено(Примечание) Тогда
			Вложение.Вставить("Примечание",Примечание);	
		КонецЕсли;
		Если ЗначениеЗаполнено(Сертификат) Тогда
			Вложение.Вставить("Сертификат",Сертификат);	
		КонецЕсли;
		ДопПоля= Новый Структура;	// alo ДопПоля
		Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"ДопПоля",Контекст.ФайлДанные,ДопПоля);
		Если ЗначениеЗаполнено(ДопПоля) Тогда
			Вложение.Вставить("ДопПоля",ДопПоля);
		Конецесли;
		Если ЗначениеЗаполнено(Провести) Тогда // alo Провести
			Вложение.Вставить("Провести",Провести);	
		КонецЕсли;
		Контекст.СоставПакета.Вложение.Добавить(Вложение);
		фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("сбисПослеФормированияДокумента","Файл_"+Контекст.ФайлДанные.Файл_Формат+"_"+СтрЗаменить(СтрЗаменить(Контекст.ФайлДанные.Файл_ВерсияФормата, ".", "_"), " ", ""),"Файл_Шаблон", Кэш);
		Если фрм<>Ложь Тогда
			фрм.сбисПослеФормированияДокумента(Док, Кэш, Контекст);	
			Вложение.СтруктураДокумента = Док; // на случай, если Док поменялся в функции сбисПослеФормированияДокумента
		КонецЕсли;
		Возврат Истина;
		
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
КонецФункции