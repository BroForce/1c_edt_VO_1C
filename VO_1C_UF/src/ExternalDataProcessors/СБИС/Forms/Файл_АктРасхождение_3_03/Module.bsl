&НаКлиенте
Функция СформироватьРасхождение(ДанныеВложений, Кэш) Экспорт
	СтруктураФайлаКонтрагента = ДанныеВложений.СтруктураФайлаКонтрагента;
	СтруктураФайлаНаша = ДанныеВложений.ВложениеНаше.СтруктураДокумента;
	Рез = СформироватьРасхождениеНаСервере(СтруктураФайлаКонтрагента, СтруктураФайлаНаша);
	ОшибкаПреобразования = Ложь;
	ШаблонXML = Кэш.ОбщиеФункции.СбисПреобразоватьДокументВXML(Рез.Док, Кэш.СовместимостьМетодов, ОшибкаПреобразования);
	Если ОшибкаПреобразования Тогда
		Кэш.ГлавноеОкно.СбисСообщитьОбОшибке(Кэш, ШаблонXML);
		Возврат Неопределено;
	КонецЕсли;
	ДанныеВложений.ВложениеНаше.Вставить("XMLДокумента", ШаблонXML);
	ТекстHTML = Кэш.Интеграция.ПолучитьHTMLПоXML(Кэш, ДанныеВложений.ВложениеНаше);
	Вложение = Новый Структура("СтруктураФайла,XMLДокумента,Название,ТекстHTML, Тип, ПодТип, ВерсияФормата,ПодВерсияФормата,ЕстьРасхождения", Рез.Док, ШаблонXML, "Акт о расхождении",ТекстHTML, ДанныеВложений.ВложениеНаше.Тип, ДанныеВложений.ВложениеНаше.ПодТип, ДанныеВложений.ВложениеНаше.ВерсияФормата,ДанныеВложений.ВложениеНаше.ПодВерсияФормата, Рез.ЕстьРасхождения);
	Возврат Вложение;
КонецФункции
Функция СформироватьРасхождениеНаСервере(СтруктураФайлаКонтрагента, СтруктураФайлаНаша) Экспорт
	ЕстьРасхождения = Ложь;
	Док  = Новый Структура;
	Док.Вставить("Файл",Новый Структура);
	Док.Файл.Вставить("Формат","АктРасхождение");
	Док.Файл.Вставить("ВерсияФормата","3.03");
	Док.Файл.Вставить("Имя","SE_TORG2_");
	Если СтруктураФайлаНаша.Файл.Свойство("КодФормы") тогда
		Док.Файл.Вставить("КодФормы",СтруктураФайлаНаша.Файл.КодФормы);
	КонецЕсли;
	Док.Файл.Вставить("Документ",Новый Структура("Дата,Номер,Название,Стороны", формат(ТекущаяДата(),"ДФ=dd.MM.yyyy"),СтруктураФайлаНаша.Файл.Документ.Номер, "Акт о расхождении", Новый Структура));
	
	Док.Файл.Документ.Вставить("СписокОснование",Новый Структура("Основание",Новый Массив));
	Док.Файл.Документ.СписокОснование.Основание.Добавить(Новый Структура("Дата,Номер",СтруктураФайлаКонтрагента.Файл.Документ.Дата,СтруктураФайлаКонтрагента.Файл.Документ.Номер));
	Если СтруктураФайлаКонтрагента.Файл.Документ.Свойство("Отправитель") Тогда
		Док.Файл.Документ.Стороны.Вставить("Поставщик",СтруктураФайлаКонтрагента.Файл.Документ.Отправитель);
		Если Док.Файл.Документ.Стороны.Поставщик.Свойство("Адрес") Тогда
			ПреобразоватьСтруктуруАдресаВМассив(Док.Файл.Документ.Стороны.Поставщик);
		КонецЕсли;
		Если Док.Файл.Документ.Стороны.Поставщик.Свойство("Код") Тогда
			Док.Файл.Документ.Стороны.Поставщик.Удалить("Код");
		КонецЕсли;
	КонецЕсли;
	Если СтруктураФайлаКонтрагента.Файл.Документ.Свойство("Получатель") Тогда
		Док.Файл.Документ.Стороны.Вставить("Покупатель",СтруктураФайлаКонтрагента.Файл.Документ.Получатель);
		Если Док.Файл.Документ.Стороны.Покупатель.Свойство("Адрес") Тогда
			ПреобразоватьСтруктуруАдресаВМассив(Док.Файл.Документ.Стороны.Покупатель);
		КонецЕсли;
		Если Док.Файл.Документ.Стороны.Покупатель.Свойство("Код") Тогда
			Док.Файл.Документ.Стороны.Покупатель.Удалить("Код");
		КонецЕсли;
	КонецЕсли;
	Если СтруктураФайлаКонтрагента.Файл.Документ.Свойство("Грузоотправитель") Тогда
		Док.Файл.Документ.Стороны.Вставить("Грузоотправитель",СтруктураФайлаКонтрагента.Файл.Документ.Грузоотправитель);
		Если Док.Файл.Документ.Стороны.Грузоотправитель.Свойство("Адрес") Тогда
			ПреобразоватьСтруктуруАдресаВМассив(Док.Файл.Документ.Стороны.Грузоотправитель);
		КонецЕсли;
		Если Док.Файл.Документ.Стороны.Грузоотправитель.Свойство("Код") Тогда
			Док.Файл.Документ.Стороны.Грузоотправитель.Удалить("Код");
		КонецЕсли;
	КонецЕсли;
	Если СтруктураФайлаКонтрагента.Файл.Документ.Свойство("Грузополучатель") Тогда
		Док.Файл.Документ.Стороны.Вставить("Грузополучатель",СтруктураФайлаКонтрагента.Файл.Документ.Грузополучатель);
		Если Док.Файл.Документ.Стороны.Грузополучатель.Свойство("Адрес") Тогда
			ПреобразоватьСтруктуруАдресаВМассив(Док.Файл.Документ.Стороны.Грузополучатель);
		КонецЕсли;
		Если Док.Файл.Документ.Стороны.Грузополучатель.Свойство("Код") Тогда
			Док.Файл.Документ.Стороны.Грузополучатель.Удалить("Код");
		КонецЕсли;
	КонецЕсли;
	Док.Файл.Документ.Вставить("СписокСтрОтклонения",Новый Структура);
	ТабЧастьНаша = МассивСтруктурВТаблицуЗначений(СтруктураФайлаНаша.Файл.Документ.СписокСтрТабл.СтрТабл);
	ТабЧастьНаша.Колонки.Добавить("ЕстьВФайлеКонтрагента", Новый ОписаниеТипов("Булево"));
	
	ТабЧастьКонтрагента = Новый Соответствие;   // сворачиваем табличную часть по идентификатору строки
	Для Каждого СтрТабл Из СтруктураФайлаКонтрагента.Файл.Документ.ТаблДок.СтрТабл Цикл
		Если СтрТабл.Свойство("Идентификатор") и ЗначениеЗаполнено(СтрТабл.Идентификатор)  Тогда
			СтрокаСоответствия = ТабЧастьКонтрагента.Получить(СтрТабл.Идентификатор);
			Если СтрокаСоответствия = Неопределено Тогда
				ТабЧастьКонтрагента.Вставить(СтрТабл.Идентификатор, СтрТабл);	
			Иначе
				Если СтрТабл.Свойство("Кол_во") и СтрокаСоответствия.Свойство("Кол_во") Тогда
					СтрокаСоответствия.Кол_во = Формат(Число(СтрокаСоответствия.Кол_во)+Число(СтрТабл.Кол_во),"ЧЦ=17; ЧДЦ=3; ЧРД=.; ЧГ=0; ЧН=0.000");
				КонецЕсли;
				Если СтрТабл.Свойство("СуммаБезНал") и СтрокаСоответствия.Свойство("СуммаБезНал") Тогда
					СтрокаСоответствия.СуммаБезНал = Формат(Число(СтрокаСоответствия.СуммаБезНал)+Число(СтрТабл.СуммаБезНал),"ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
				КонецЕсли;
				Если СтрТабл.Свойство("Сумма") и СтрокаСоответствия.Свойство("Сумма") Тогда
					СтрокаСоответствия.Сумма = Формат(Число(СтрокаСоответствия.Сумма)+Число(СтрТабл.Сумма),"ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
				КонецЕсли;
				Если СтрТабл.Свойство("НДС") и СтрТабл.НДС.Свойство("Сумма") и СтрокаСоответствия.Свойство("НДС") и СтрокаСоответствия.НДС.Свойство("Сумма") Тогда
					Попытка // на случай "Без НДС"
						СуммаНДССоотв = Число(СтрокаСоответствия.НДС.Сумма);	
					Исключение
						СуммаНДССоотв = 0;
					КонецПопытки;
					Попытка // на случай "Без НДС"
						СуммаНДССтрТабл = Число(СтрТабл.НДС.Сумма);	
					Исключение
						СуммаНДССтрТабл = 0;
					КонецПопытки;
					СтрокаСоответствия.НДС.Сумма = Формат(СуммаНДССоотв+СуммаНДССтрТабл,"ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
				КонецЕсли;

			КонецЕсли;
		Иначе
			ТабЧастьКонтрагента.Вставить(Новый УникальныйИдентификатор, СтрТабл);	
		КонецЕсли;
	КонецЦикла;
	
	
	СтрОтклонения = Новый Массив;
	Для Каждого СтрокаСоответствия Из ТабЧастьКонтрагента Цикл
		СтрТабл = СтрокаСоответствия.Значение;
		НоваяСтрока = Новый Структура();
		Если СтрТабл.Свойство("Название") Тогда
			НоваяСтрока.Вставить("Название", СтрТабл.Название);
		КонецЕсли;
		//Если СтрТабл.Свойство("Код") Тогда
		//	НоваяСтрока.Вставить("Код", СтрТабл.Код);
		//КонецЕсли;
		Если СтрТабл.Свойство("Артикул") Тогда
			НоваяСтрока.Вставить("Артикул", СтрТабл.Артикул);
		КонецЕсли;
		Если СтрТабл.Свойство("ЕдИзм") Тогда
			НоваяСтрока.Вставить("ЕдИзм", СтрТабл.ЕдИзм);
		КонецЕсли;
		Если СтрТабл.Свойство("ОКЕИ") Тогда
			НоваяСтрока.Вставить("ОКЕИ", СтрТабл.ОКЕИ);
		КонецЕсли;
		Если СтрТабл.Свойство("Идентификатор") Тогда
			НоваяСтрока.Вставить("КодПоставщика", СтрТабл.Идентификатор);
		КонецЕсли;
		ПоДокументам = Новый Структура();
		Если СтрТабл.Свойство("Цена") Тогда
			ПоДокументам.Вставить("Цена", СтрТабл.Цена);
		Иначе
			ПоДокументам.Вставить("Цена", "0");
		КонецЕсли;
		Если СтрТабл.Свойство("Кол_во") Тогда
			ПоДокументам.Вставить("Кол_во", СтрТабл.Кол_во);
		Иначе
			ПоДокументам.Вставить("Кол_во", "0");
		КонецЕсли;
		Если СтрТабл.Свойство("СуммаБезНал") Тогда
			ПоДокументам.Вставить("СуммаБезНал", СтрТабл.СуммаБезНал);
		Иначе
			ПоДокументам.Вставить("СуммаБезНал", "0");
		КонецЕсли;
		Если СтрТабл.Свойство("Сумма") Тогда
			ПоДокументам.Вставить("Сумма", СтрТабл.Сумма);
		Иначе
			ПоДокументам.Вставить("Сумма", "0");
		КонецЕсли;
		Если СтрТабл.Свойство("НДС") Тогда
			ПоДокументам.Вставить("НДС", СтрТабл.НДС);
		КонецЕсли;
		ПоФакту = Новый Структура;
		Номенклатура = Неопределено;
		ОКЕИ = Неопределено;
		ХарактеристикаНоменклатуры = Неопределено;
		СтрТабл.Свойство("Номенклатура", Номенклатура);
		СтрТабл.Свойство("ОКЕИ", ОКЕИ);
		СтрТабл.Свойство("ХарактеристикаНоменклатуры", ХарактеристикаНоменклатуры);
		Отбор = Новый Структура("Номенклатура, ОКЕИ", Номенклатура, ОКЕИ);
		Если ТабЧастьНаша.Колонки.Найти("ХарактеристикаНоменклатуры")<>Неопределено Тогда
			Если ЗначениеЗаполнено(ХарактеристикаНоменклатуры) Тогда
				Отбор.Вставить("ХарактеристикаНоменклатуры", ХарактеристикаНоменклатуры);
			Иначе
				Отбор.Вставить("ХарактеристикаНоменклатуры", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
			КонецЕсли;
		КонецЕсли;
		НайденныеСтроки = ТабЧастьНаша.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество()>0 Тогда
			НайденнаяСтрока = НайденныеСтроки[0];
			НайденнаяСтрока.ЕстьВФайлеКонтрагента = Истина;
			ПоФакту.Вставить("Цена", НайденнаяСтрока.Цена);
			ПоФакту.Вставить("Кол_во", НайденнаяСтрока.Кол_во);
			ПоФакту.Вставить("СуммаБезНал", НайденнаяСтрока.СуммаБезНал);
			ПоФакту.Вставить("Сумма", НайденнаяСтрока.Сумма);
			ПоФакту.Вставить("НДС", НайденнаяСтрока.НДС);
			Попытка
				Если Число(НайденнаяСтрока.Цена)<>Число(ПоДокументам.Цена) или Число(НайденнаяСтрока.Кол_во)<>Число(ПоДокументам.Кол_во) или Число(НайденнаяСтрока.СуммаБезНал)<>Число(ПоДокументам.СуммаБезНал) или Число(НайденнаяСтрока.Сумма)<>Число(ПоДокументам.Сумма) Тогда
					ЕстьРасхождения = Истина;
				КонецЕсли;
			Исключение
			КонецПопытки;
			НоваяСтрока.Вставить("КодПокупателя", НайденнаяСтрока.Идентификатор); // alo Меркурий
		Иначе
			ЕстьРасхождения = Истина;
			ПоФакту.Вставить("Цена", "0");
			ПоФакту.Вставить("Кол_во", "0");
			ПоФакту.Вставить("СуммаБезНал", "0");
			ПоФакту.Вставить("Сумма", "0");
		КонецЕсли;
		НоваяСтрока.Вставить("Кол_во", Формат(Число(ПоФакту.Кол_во)-Число(ПоДокументам.Кол_во),"ЧЦ=17; ЧДЦ=3; ЧРД=.; ЧГ=0; ЧН=0.000"));
		НоваяСтрока.Вставить("Сумма", Формат(Число(ПоФакту.Сумма)-Число(ПоДокументам.Сумма),"ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));
		Если СтрТабл.Свойство("Характеристика") Тогда
			НоваяСтрока.Вставить("СписокХарактеристика", Новый Структура("Характеристика",Новый Массив));
			НоваяСтрока.СписокХарактеристика.Характеристика.Добавить(СтрТабл.Характеристика);
		КонецЕсли;
		НоваяСтрока.Вставить("ПоДокументам", ПоДокументам);
		НоваяСтрока.Вставить("ПоФакту", ПоФакту);
		СтрОтклонения.Добавить(НоваяСтрока);
	КонецЦикла;
	// Если добавились строки, которых не было в файле контрагента
	НашиСтроки = ТабЧастьНаша.НайтиСтроки(Новый Структура("ЕстьВФайлеКонтрагента", Ложь)); 
	Для Каждого СтрТабл Из НашиСтроки Цикл
		ЕстьРасхождения = Истина;
		НоваяСтрока = Новый Структура();
		НоваяСтрока.Вставить("Название", СтрТабл.Название);
		//НоваяСтрока.Вставить("Код", СтрТабл.Код);
		Попытка
			НоваяСтрока.Вставить("Артикул", СтрТабл.Артикул);
		Исключение
		КонецПопытки;
		НоваяСтрока.Вставить("ЕдИзм", СтрТабл.ЕдИзм);
		НоваяСтрока.Вставить("ОКЕИ", СтрТабл.ОКЕИ);
		НоваяСтрока.Вставить("КодПокупателя", СтрТабл.Идентификатор);
		ПоДокументам = Новый Структура();
		ПоДокументам.Вставить("Цена", "0");
		ПоДокументам.Вставить("Кол_во", "0");
		ПоДокументам.Вставить("СуммаБезНал", "0");
		ПоДокументам.Вставить("Сумма", "0");
		ПоФакту = Новый Структура;
		ПоФакту.Вставить("Цена", СтрТабл.Цена);
		ПоФакту.Вставить("Кол_во", СтрТабл.Кол_во);
		ПоФакту.Вставить("СуммаБезНал", СтрТабл.СуммаБезНал);
		ПоФакту.Вставить("Сумма", СтрТабл.Сумма);
		ПоФакту.Вставить("НДС", СтрТабл.НДС);
		НоваяСтрока.Вставить("Кол_во", Формат(Число(ПоФакту.Кол_во)-Число(ПоДокументам.Кол_во),"ЧЦ=17; ЧДЦ=3; ЧРД=.; ЧГ=0; ЧН=0.000"));
		НоваяСтрока.Вставить("Сумма", Формат(Число(ПоФакту.Сумма)-Число(ПоДокументам.Сумма),"ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));
		Если ТабЧастьНаша.Колонки.Найти("Характеристика")<>Неопределено Тогда
			НоваяСтрока.Вставить("СписокХарактеристика", Новый Структура("Характеристика",Новый Массив));
			НоваяСтрока.СписокХарактеристика.Характеристика.Добавить(СтрТабл.Характеристика);
		КонецЕсли;
		НоваяСтрока.Вставить("ПоДокументам", ПоДокументам);
		НоваяСтрока.Вставить("ПоФакту", ПоФакту);
		СтрОтклонения.Добавить(НоваяСтрока);	
	КонецЦикла;
	Док.Файл.Документ.СписокСтрОтклонения.Вставить("СтрОтклонения",СтрОтклонения);
	Возврат Новый Структура("Док, ЕстьРасхождения", Док, ЕстьРасхождения);
КонецФункции
Процедура ПреобразоватьСтруктуруАдресаВМассив(СтруктураУчастника)
	Если СтруктураУчастника.Свойство("Адрес") Тогда
		МассивАдресов = Новый Массив;
		МассивАдресов.Добавить(СтруктураУчастника.Адрес);
		СтруктураУчастника.Вставить("СписокАдрес", Новый Структура("Адрес", МассивАдресов));
		СтруктураУчастника.Удалить("Адрес");
	КонецЕсли;	
КонецПроцедуры
Функция МассивСтруктурВТаблицуЗначений(МассивСтруктур)
// преобразует массив структур в таблицу значений	
	Результат = Новый ТаблицаЗначений;
	Если МассивСтруктур = Неопределено Или МассивСтруктур.Количество() = 0 Тогда
		Возврат Результат;
	Иначе 
		Образец = МассивСтруктур[0];
		Для Каждого  Стр из Образец Цикл
			Результат.Колонки.Добавить(Стр.Ключ );
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Стр Из МассивСтруктур Цикл
		СтрТ = Результат.Добавить();
		ЗаполнитьЗначенияСвойств(СтрТ, Стр);
		Попытка
			СтрТ.ОКЕИ = СокрЛП(СтрТ.ОКЕИ);	
		Исключение
		КонецПопытки;
	КонецЦикла;
	Возврат Результат;
КонецФункции