&НаКлиенте
Перем НажатиеСохранитьВыполнено;
&НаКлиенте
Перем КлючиИспользовать;
&НаКлиенте
Перем НастройкиПодключения_Было;
&НаКлиенте
Перем МестныйКэш Экспорт;

// функции для совместимости кода 
&НаКлиенте
Функция сбисПолучитьФорму(ИмяФормы)
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		Попытка
			ЭтотОбъект="";
		Исключение
		КонецПопытки;
		Возврат ПолучитьФорму("ВнешняяОбработка.СБИС.Форма."+ИмяФормы);
	КонецЕсли;
	Возврат ЭтотОбъект.ПолучитьФорму(ИмяФормы);
КонецФункции

&НаКлиенте
Функция сбисЭлементФормы(Форма,ИмяЭлемента)
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		Возврат Форма.Элементы.Найти(ИмяЭлемента);
	КонецЕсли;
	Возврат Форма.ЭлементыФормы.Найти(ИмяЭлемента);
КонецФункции

&НаКлиенте
Функция сбисПолучитьСтраницу(Элемент, ИмяСтраницы)
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		Возврат Элемент.ПодчиненныеЭлементы[ИмяСтраницы];
	КонецЕсли;
	Возврат Элемент.Страницы[ИмяСтраницы];
КонецФункции
//------------------------------------------------------

// Процедура заполняет реквизиты формы из сохраненных настроек	
&НаКлиенте
Процедура ПриОткрытии()
	НажатиеСохранитьВыполнено = Ложь;
	
	МестныйКэш = ЭтаФорма.ВладелецФормы.Кэш;
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, МестныйКэш.Парам);
	СбисЗаполнитьАдресСервера(МестныйКэш);
	ЗаполнитьЗначенияСвойств(НастройкиПодключения_Было, ЭтаФорма);
	
	Если ТипПрокси = Неопределено Тогда
		ТипПрокси = "НеИспользовать";
	ИначеЕсли Не(	ТипПрокси = "Вручную"
				Или	ТипПрокси = "НеИспользовать") Тогда;
		ТипПрокси = "Автоматически";
	КонецЕсли;
	Если Не ТипПрокси = "Вручную" Тогда
		ПроксиСервер = "";
		ПроксиПорт   = ""; 
		ПроксиЛогин  = "";  
		ПроксиПароль = "";
	КонецЕсли;
	
	ОбновитьДоступностьНастроек();
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПроксиСервераПриИзменении(Элемент)
// Процедура устанавливает видимость элементов формы в зависимости от выбранного варианта настроек прокси	
	ОбновитьДоступностьНастроек();
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНажатие(Элемент)
// Процедура записывает выбранные настройки в сохраняемые параметры и закрывает форму	
	Если СпособОбмена = 1 и Не ЗначениеЗаполнено(КаталогОбмена) Тогда
		ТекстСообщения = "Заполните каталог обмена документами";
		Если МестныйКэш.ПараметрыСистемы.Клиент.УправляемоеПриложение Тогда 	
			Сообщить(ТекстСообщения);
		Иначе
			Предупреждение(ТекстСообщения);
		КонецЕсли;
		Возврат;
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(МестныйКэш.Парам, ЭтаФорма, "СпособОбмена,СпособХраненияНастроек,КаталогОбмена,КаталогНастроек,ВремяОжиданияОтвета,ШифроватьВыборочно,АдресСервера");
	Если ТипПрокси = "Вручную" Тогда
		МестныйКэш.Парам.Вставить("ТипПрокси","Вручную");
		МестныйКэш.Парам.Вставить("ПроксиСервер",ПроксиСервер);
		МестныйКэш.Парам.Вставить("ПроксиПорт",ПроксиПорт );
		МестныйКэш.Парам.Вставить("ПроксиЛогин",ПроксиЛогин);
		МестныйКэш.Парам.Вставить("ПроксиПароль",ПроксиПароль);
	ИначеЕсли ТипПрокси = "Автоматически" Тогда
		МестныйКэш.Парам.Вставить("ТипПрокси","Автоматически");
	Иначе
		МестныйКэш.Парам.Вставить("ТипПрокси","НеИспользовать");
	КонецЕсли;
	#Если Не ТолстыйКлиентОбычноеПриложение Тогда
		МестныйКэш.Парам.ИнтеграцияAPIВызовыНаКлиенте = ИнтеграцияAPIВызовыНаКлиенте;
    #КонецЕсли
	МестныйКэш.ГлавноеОкно.ВремяОжиданияОтвета = ВремяОжиданияОтвета;
	МестныйКэш.ГлавноеОкно.АдресСервера = АдресСервера;
	МестныйКэш.СБИС.АдресСервера = АдресСервера;
	МестныйКэш.СБИС.ПараметрыИнтеграции.РезервныйДомен = МестныйКэш.Интеграция.сбисВключенРезервныйДомен(МестныйКэш, АдресСервера);
	
	НажатиеСохранитьВыполнено = Истина;
	
	ЭтаФорма.Закрыть(МестныйКэш.Парам);
КонецПроцедуры

&НаКлиенте
Процедура СпособОбменаПриИзменении(Элемент=Неопределено)
	Если		СпособОбмена = 1
		И	Не	ЗначениеЗаполнено(КаталогОбмена) Тогда
		КаталогОбменаНачалоВыбора(сбисЭлементФормы(ЭтаФорма, "КаталогОбмена"),"", Истина);
	КонецЕсли;
	ОбновитьДоступностьНастроек();
	СпособХраненияНастроекПриИзменении(Элемент, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура СпособХраненияНастроекПриИзменении(Элемент, РежимДиалога=Истина)
	
	сбисЭлементФормы(ЭтаФорма, "КаталогНастроек").Видимость = СпособХраненияНастроек=0;	

КонецПроцедуры

&НаКлиенте
Процедура КаталогОбменаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
// открывает диалог выбора каталога обмена	
	ДиалогОткрытия = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога); 
	ДиалогОткрытия.Заголовок = "Выберите каталог обмена документами"; 
	Если ДиалогОткрытия.Выбрать() Тогда 
		КаталогОбмена = ДиалогОткрытия.Каталог; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте                                             
Процедура ОбновитьДоступностьНастроек()
// Процедура устанавливает видимость элементов формы в зависимости от выбранного варианта настроек прокси		
    ДоступностьПрокси = ТипПрокси="Вручную";
	СбисЭлементВидимость = сбисЭлементФормы(ЭтаФорма, "ИнтеграцияAPIВызовыНаКлиенте");
	Если Не СбисЭлементВидимость = Неопределено Тогда
		#Если ВебКлиент Тогда
			СбисЭлементВидимость.Видимость = Ложь;
		#Иначе
			СбисЭлементВидимость.Видимость = (СпособОбмена = 3);
		#КонецЕсли
	КонецЕсли;
	сбисЭлементФормы(ЭтаФорма, "ШифроватьВыборочно").Видимость			= СпособОбмена=5 Или СпособОбмена=7;
	сбисЭлементФормы(ЭтаФорма, "ВремяОжиданияОтвета").Видимость			= СпособОбмена=0 Или СпособОбмена=7 Или СпособОбмена=6 Или СпособОбмена=5 Или СпособОбмена=4;
	сбисЭлементФормы(ЭтаФорма, "КаталогОбмена").Видимость				= СпособОбмена=1;
	сбисЭлементФормы(ЭтаФорма, "КаталогНастроек").Видимость				= СпособХраненияНастроек=0;
	
	сбисЭлементФормы(ЭтаФорма, "ПроксиСервер").Доступность	= ДоступностьПрокси;
	сбисЭлементФормы(ЭтаФорма, "ПроксиПорт").Доступность	= ДоступностьПрокси;
	сбисЭлементФормы(ЭтаФорма, "ПроксиЛогин").Доступность	= ДоступностьПрокси;
	сбисЭлементФормы(ЭтаФорма, "ПроксиПароль").Доступность	= ДоступностьПрокси;
	Если Не МестныйКэш.ПараметрыСистемы.Клиент.УправляемоеПриложение Тогда 
		сбисЭлементФормы(ЭтаФорма, "НадписьСервер").Доступность	= ДоступностьПрокси;
		сбисЭлементФормы(ЭтаФорма, "НадписьПорт").Доступность	= ДоступностьПрокси;
		сбисЭлементФормы(ЭтаФорма, "НадписьЛогин").Доступность	= ДоступностьПрокси;
		сбисЭлементФормы(ЭтаФорма, "НадписьПароль").Доступность	= ДоступностьПрокси;
	КонецЕсли;
	Если	ДоступностьПрокси
		И	МестныйКэш.Парам.Свойство("ПроксиСервер")
		И	СокрЛП(МестныйКэш.Парам.ПроксиСервер) <> "" Тогда
		ПроксиСервер = МестныйКэш.Парам.ПроксиСервер;
	КонецЕсли;	 

	//Определить возможность использования серверных настроек для интеграции
	ВременныйКэш = Новый Структура("СБИС,ТихийРежим", МестныйКэш.СБИС,Истина);
	МестныйКэш.ГлавноеОкно.ОпределитьФормуИнтеграции(ВременныйКэш, СпособОбмена);
	Если	ВременныйКэш.Интеграция.ДоступныСерверныеНастройки()	Тогда
		сбисЭлементФормы(ЭтаФорма, "ПанельСпособХраненияНастроек").Видимость	= Истина;
	Иначе
		сбисЭлементФормы(ЭтаФорма, "ПанельСпособХраненияНастроек").Видимость	= Ложь;
		СпособХраненияНастроек	= 0;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если НажатиеСохранитьВыполнено Тогда//Пробуем включить обмен
		//Нажали закрыть, возвращаем как было и закрываем.
		ДополнительныеПараметры	= Новый Структура("ФормаВладелец, ВызыватьРекурсивно", ЭтаФорма, Ложь);//Для корректного сообщения об ошибке УФ
		НастройкиПодключения	= Новый Структура(КлючиИспользовать);
		ЗаполнитьЗначенияСвойств(НастройкиПодключения, Этаформа);
		Изменено = МестныйКэш.ГлавноеОкно.ОпределитьИнтеграциюРабочиеФормы(МестныйКэш, НастройкиПодключения, ДополнительныеПараметры);
		Если Не Изменено Тогда
			НажатиеСохранитьВыполнено = Ложь;
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КаталогНастроекНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка= Ложь;
	КаталогНастроек	= сбисВыбратьКаталог(КаталогНастроек);

КонецПроцедуры

&НаКлиенте
Процедура КаталогНастроекОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	МестныйКэш.ГлавноеОкно.сбисОткрытьКаталог(КаталогНастроек);
КонецПроцедуры

&НаКлиенте
Функция СбисВыбратьКаталог(СтароеЗначение)
	
	ДиалогОткрытия = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога); 
	ДиалогОткрытия.Каталог		= СтароеЗначение;
	ДиалогОткрытия.Заголовок	= "Выберите каталог"; 
	Если ДиалогОткрытия.Выбрать() Тогда 
		Возврат ДиалогОткрытия.Каталог + "\"; 
	КонецЕсли;
	
	Возврат	СтароеЗначение;
	
КонецФункции

//Заполняет список адресов сервера
&НаКлиенте
Процедура СбисЗаполнитьАдресСервера(Кэш)
	
	ДанныеЭлементов = "ЭлементыФормы";
	Если Кэш.ПараметрыСистемы.Клиент.УправляемоеПриложение Тогда
		ДанныеЭлементов = "Элементы";
	КонецЕсли;
	ЭтаФорма[ДанныеЭлементов].АдресСервера.СписокВыбора.Очистить();
	
	СписокСерверов		= Кэш.ГлавноеОкно.СбисСписокСерверов(Кэш);
	ПредставлениеАдрес	= СтрЗаменить(СтрЗаменить(СокрЛП(АдресСервера), "https:", ""), "/", "");
	ДобавитьАдрес		= Истина;
	Для Каждого ЭлементСписка Из СписокСерверов Цикл
		ЭтаФорма[ДанныеЭлементов].АдресСервера.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
		Если ЭлементСписка.Представление = ПредставлениеАдрес Тогда
			АдресСервера = ЭлементСписка.Значение;
			ДобавитьАдрес = Ложь;
		КонецЕсли;
	КонецЦикла;
	Если ДобавитьАдрес Тогда
		ЭтаФорма[ДанныеЭлементов].АдресСервера.СписокВыбора.Добавить(АдресСервера, ПредставлениеАдрес);
	КонецЕсли;
	АдресСервера = АдресСервера;//перевыберем для списка
	
КонецПроцедуры

&НаКлиенте
Процедура СпособХраненияПриИзменении(Элемент)

	ОбновитьДоступностьНастроек();
	
КонецПроцедуры

КлючиИспользовать = "СпособОбмена, СпособХраненияНастроек, КаталогНастроек, КаталогОбмена, АдресСервера, ШифроватьВыборочно, ВремяОжиданияОтвета";
НастройкиПодключения_Было = Новый Структура(КлючиИспользовать);
#Если Не ТолстыйКлиентОбычноеПриложение Тогда
	НастройкиПодключения_Было.Вставить("ИнтеграцияAPIВызовыНаКлиенте");
#КонецЕсли
