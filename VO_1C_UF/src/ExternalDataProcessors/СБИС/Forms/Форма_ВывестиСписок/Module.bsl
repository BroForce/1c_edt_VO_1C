&НаКлиенте
Перем	МестныйКэш	Экспорт;//Не используется

//////////////////////////////////////////////////////////////
///////////////////////Работа формы///////////////////////////
//////////////////////////////////////////////////////////////

/////Команды/////

&НаКлиенте
Процедура	ВыбратьВсе(Команда)

	ОтметитьСтроки(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура	Ок(Команда)

	СформироватьПоказатьДокумент();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура	Отмена(Команда)

	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура	СнятьВсе(Команда)
	
	ОтметитьСтроки(Ложь);
	
КонецПроцедуры

////Системные////

&НаКлиенте
Процедура	ПриОткрытии(Отказ)

	УстановитьСписокЗначений();
	УстановитьЗначенияПоУмолчанию();	
	
КонецПроцедуры

//////Прочие/////

&НаСервере
Процедура	ОтметитьСтроки(Значение)
	
	ТаблицаКолонок	= РеквизитФормыВЗначение("Колонки", Тип("ТаблицаЗначений"));
	ТаблицаКолонок.ЗаполнитьЗначения(Значение, "Отмечен");
	ЭтаФорма.Колонки.Загрузить(ТаблицаКолонок);
	
КонецПроцедуры

&НаСервере
Функция		СобратьОтмеченныеЗаголовки()
	
	СтруктураЗаголовков	= Новый	Структура();
	
	Для	Каждого	СтрокаВыбранныхКолонок	Из	Колонки	Цикл
		Если	Не	СтрокаВыбранныхКолонок.Отмечен	Тогда
			Продолжить;
		КонецЕсли;
		СтруктураЗаголовков.Вставить(СтрокаВыбранныхКолонок.Наименование, СтрокаВыбранныхКолонок.Заголовок);
	КонецЦикла;
	
	Возврат	СтруктураЗаголовков;

КонецФункции

&НаКлиенте
Процедура	СформироватьПоказатьДокумент(ПутьККаталогу	= "", УстановленноеЗначение	= Неопределено)
	
	ТаблДок		= Неопределено;
	Расширение	= "";
	Тип			= "";
	
	Если	УстановленноеЗначение	= Неопределено	Тогда
		УстановленноеЗначение	= ВыводитьВ;
	КонецЕсли;
	
	Если		УстановленноеЗначение	= 0	Тогда
		Заголовки	= СобратьОтмеченныеЗаголовки();
		ТаблДок	= СформироватьТабличныйДокумент("ТаблицаДанных", Заголовки);
		Расширение	= "xls";
		Тип			= "xls";
	ИначеЕсли	УстановленноеЗначение	= 1	Тогда
		Заголовки	= СобратьОтмеченныеЗаголовки();
		ТаблДок	= СформироватьТекстовыйДокумент("ТаблицаДанных", Заголовки);
		Расширение	= "txt";
		Тип			= "UTF8"
	ИначеЕсли	УстановленноеЗначение	= 2	Тогда
		ДиалогПути	= Новый	ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
		ДиалогПути.Заголовок	= "Укажите каталог для сохранения файла";
		Если	ДиалогПути.Выбрать()	Тогда
			СформироватьПоказатьДокумент(ДиалогПути.Каталог, 0);
		КонецЕсли;
	ИначеЕсли	УстановленноеЗначение	= 3	Тогда
		ДиалогПути	= Новый	ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
		ДиалогПути.Заголовок	= "Укажите каталог для сохранения файла";
		Если	ДиалогПути.Выбрать()	Тогда
			СформироватьПоказатьДокумент(ДиалогПути.Каталог, 1);
		КонецЕсли;
	КонецЕсли;
	Если	Не	ТаблДок	= Неопределено	Тогда
		Если	ПутьККаталогу	= ""	Тогда
			ТаблДок.Показать("Новый реестр");
		Иначе
			Попытка
				ТаблДок.Записать(ПутьККаталогу	+ "/"	+ "Сохраненный реестр."	+ Расширение,	Тип);
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура	УстановитьЗначенияПоУмолчанию()
	
	Если	Элементы.ВыводитьВ.СписокВыбора.Количество()	Тогда
		ВыводитьВ	= 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура	УстановитьСписокЗначений()
	
	Элементы.ВыводитьВ.СписокВыбора.Очистить();
	Элементы.ВыводитьВ.СписокВыбора.Добавить(0, "Табличный документ"	,,Элементы.КартинкаMXL.Картинка);
	Элементы.ВыводитьВ.СписокВыбора.Добавить(1, "Текстовый документ"	,,Элементы.КартинкаTXT.Картинка);
	Элементы.ВыводитьВ.СписокВыбора.Добавить(2, "Файл Excel"			,,Элементы.КартинкаExcel.Картинка);
	Элементы.ВыводитьВ.СписокВыбора.Добавить(3, "Файл Блокнот"			,,Элементы.КартинкаБлокнот.Картинка);
	
КонецПроцедуры

//////////////////////////////////////////////////////////////
////////////////Ключевые процедуры и функции//////////////////
//////////////////////////////////////////////////////////////

&НаСервере
Процедура	ВосстановитьДанныеНаСервере(Контекст, Отказ)
	
	ЗаполнитьТаблицуДанных(Контекст, Отказ);
	ЗаполнитьДанныеКолонок(Контекст, Отказ)
	
КонецПроцедуры

&НаСервере
Процедура	ЗаполнитьТаблицуДанных(Контекст, Отказ)
	
	//Данные
	Если		ТипЗнч(Контекст.Данные)		= Тип("Строка")		Тогда
		ДанныеВТаблице	= ЗначениеИзСтрокиВнутр(Контекст.Данные);
	ИначеЕсли	ТипЗнч(Контекст.Данные)		= Тип("Массив")
			И	Контекст.Данные.Количество()
			И	ТипЗнч(Контекст.Данные[0])	= Тип("Структура")	Тогда//Как данные можно передать и массив структур
					ДанныеВТаблице	= Новый	ТаблицаЗначений;
					СтруктураТипов	= Новый	Структура;
					Для	Каждого	КлючИЗначение	Из	Контекст.Данные[0]	Цикл
						ИмяКолонки	= КлючИЗначение.Ключ;
						СтруктураТипов.Вставить(ИмяКолонки, Новый	Массив);
						СтруктураТипов[ИмяКолонки].Добавить(ТипЗнч(КлючИЗначение.Значение));
					КонецЦикла;
					//Собрать все типы в колонках. Да, перебором.
					Шаг	= 1;
					Пока	Шаг	<	Контекст.Данные.Количество()	Цикл
						СтрокаМассива	= Контекст.Данные[Шаг];
						Для	Каждого	КлючИЗначение	Из	СтрокаМассива	Цикл
							Если	Не	КлючИЗначение.Значение	= Неопределено
								И		СтруктураТипов[КлючИЗначение.Ключ].Найти(ТипЗнч(КлючИЗначение.Значение))	= Неопределено	Тогда
									СтруктураТипов[КлючИЗначение.Ключ].Добавить(ТипЗнч(КлючИЗначение.Значение));
							КонецЕсли;
						КонецЦикла;
						Шаг	= Шаг	+ 1;
					КонецЦикла;
					//Добавить колонки в таблицу
					Для	Каждого	КлючИЗначение	Из	Контекст.Данные[0]	Цикл
						ИмяКолонки	= КлючИЗначение.Ключ;
						ДанныеВТаблице.Колонки.Добавить(КлючИЗначение.Ключ, Новый	ОписаниеТипов(СтруктураТипов[КлючИЗначение.Ключ]), КлючИЗначение.Ключ);
					КонецЦикла;
					//Заполнить таблицу для заливки в ТЗ на форме.
					Для	Каждого	СтрокаМассива	Из	Контекст.Данные		Цикл
						НоваяСтрока	= ДанныеВТаблице.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаМассива);
					КонецЦикла;
	Иначе
		Сообщить("Неверно переданы данные!");
		Отказ	= Истина;
		Возврат;
	КонецЕсли;
	ТекущиеДанные	= РеквизитФормыВЗначение("ТаблицаДанных",	Тип("ТаблицаЗначений"));
	МассивУдаляемыхРеквизитов	= Новый	Массив;	
	МассивДобавляемыхРеквизитов	= Новый	Массив;	
	
	//Определить колонки таблицы данных
	Для каждого ТекущаяКолонка из ТекущиеДанные.Колонки	Цикл  
        МассивУдаляемыхРеквизитов.Добавить("ТаблицаДанных"	+ "."	+ ТекущаяКолонка.Имя);
    КонецЦикла;
    
    Для каждого ТекущаяКолонка из ДанныеВТаблице.Колонки Цикл
        МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(ТекущаяКолонка.Имя,ТекущаяКолонка.ТипЗначения,"ТаблицаДанных"));
	КонецЦикла;
	
	ЭтаФорма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов,МассивУдаляемыхРеквизитов);
	//В таблице хранятся данные, для вывода в список.
	ЗначениеВРеквизитФормы(ДанныеВТаблице,"ТаблицаДанных");
	
КонецПроцедуры

&НаСервере
Процедура	ЗаполнитьДанныеКолонок(Контекст, Отказ)
	
	//Заголовки
	СтруктураЗаголовков	= Контекст.СтруктураЗаголовков;
	
	//Заполняем таблицу доступных колонок.
	Колонки.Очистить();
	Если	СтруктураЗаголовков.Свойство("Видимые")	Тогда
		Для	Каждого	КлючИЗначение	Из	СтруктураЗаголовков.Видимые	Цикл
			НоваяСтрока	= Колонки.Добавить();
			НоваяСтрока.Заголовок		= КлючИЗначение.Значение;
			НоваяСтрока.Наименование	= КлючИЗначение.Ключ;
			НоваяСтрока.Отмечен			= Истина;
		КонецЦикла;
	КонецЕсли;
	Если	СтруктураЗаголовков.Свойство("Невидимые")	Тогда
		Для	Каждого	КлючИЗначение	Из	СтруктураЗаголовков.Невидимые	Цикл
			НоваяСтрока	= Колонки.Добавить();
			НоваяСтрока.Заголовок		= КлючИЗначение.Значение;
			НоваяСтрока.Наименование	= КлючИЗначение.Ключ;
			НоваяСтрока.Отмечен			= Ложь;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

//Формируем табл. док для демонстрации списка. Управление выводом колонок через структуру заголовков. 
&НаСервере
Функция		СформироватьТабличныйДокумент(ПереданныеДанные, Заголовки	= Неопределено)	Экспорт
	
	//Если что, можно просто сформировать таблицу/структуру с данными на вывод и вызвать эту функцию для формирования документа.
	Данные		= ПереданныеДанные;
	ТаблДок		= Новый ТабличныйДокумент;
	ЭтоТаблица	= Ложь;
	
	//Структура заголовков не обязательна. Если её нет, выводятся все колонки, если есть, то выводятся только колонки в структуре.
	Если	Не	ТипЗнч(Заголовки)	= Тип("Структура")	Тогда
			ЗаполнитьЗаголовки	= Истина;
	   		Заголовки			= Новый Структура;
	Иначе
		ЗаполнитьЗаголовки	= Ложь;
	КонецЕсли;	                     
	             
	Если	ТипЗнч(ПереданныеДанные)	= Тип("Строка")
		И	ТипЗнч(ЭтаФорма)			= Тип("УправляемаяФорма")
		И	ПереданныеДанные			= "ТаблицаДанных"			Тогда//Передано имя элемента формы, выводим таблицу значений
			Данные	= РеквизитФормыВЗначение(Данные);
	Иначе//У нас ничего не выйдет, если переданы заголовки, убрать и дальше вывалиться в ошибку
   		Заголовки			= Новый Структура;
		ЗаполнитьЗаголовки	= Истина;
	КонецЕсли;
	
	Если		Не	ЗаполнитьЗаголовки						Тогда//Выводим по заголовкам
		ДанныеКолонок		= Заголовки;
		Колонка_Имя			= "Ключ";
		Колонка_Заголовок	= "Значение";
	ИначеЕсли	ТипЗнч(Данные)	= Тип("ТаблицаЗначений")	Тогда//Выводим таблицу значений
		ДанныеКолонок		= Данные.Колонки;
		Колонка_Имя			= "Имя";
		Колонка_Заголовок	= "Заголовок";
	ИначеЕсли	ТипЗнч(Данные)	= Тип("Массив")
			И	Данные.Количество()
			И	ТипЗнч(Данные[0])	= Тип("Структура")		Тогда//Выводим массив структур. Если надо передать данные с клиента, можно в массиве строк
					ДанныеКолонок		= Данные[0];
					Колонка_Имя			= "Ключ";
					Колонка_Заголовок	= "Ключ";
	Иначе
		Сообщить("Неверно переданы данные в процедуру формирования табличного документа!",	СтатусСообщения.Обычное);
		ДанныеКолонок	= Новый	Структура;
	КонецЕсли;
	
	РазмерСтроки	= ДанныеКолонок.Количество();
	Если	РазмерСтроки	= 0	Тогда
		Возврат	Неопределено;
	КонецЕсли;
		
    ОбластьВывода	= ТаблДок.ПолучитьОбласть(1, 1, 1, РазмерСтроки);
	
	Счетчик			= 0;
	Для	Каждого	Колонка	Из	ДанныеКолонок	Цикл
		Счетчик						= Счетчик	+ 1;
		ИмяКолонки					= Колонка[Колонка_Имя];
		Если	ПустаяСтрока(ИмяКолонки)	Тогда
			Продолжить;
		КонецЕсли;
		ЗаговокКолонки				= ?(ЗначениеЗаполнено(Колонка[Колонка_Заголовок]),Колонка[Колонка_Заголовок],ИмяКолонки);
		
		ОбластьЗаполнения			= ОбластьВывода.Область(1, Счетчик, 1, Счетчик);
		ОбластьЗаполнения.Параметр	= ИмяКолонки;
		ОбластьЗаполнения.Заполнение= ТипЗаполненияОбластиТабличногоДокумента.Параметр;
		Если	ЗаполнитьЗаголовки	Тогда//Если не переданы заголовки, заполнить по-умолчанию.
			Заголовки.Вставить(ИмяКолонки, ЗаговокКолонки);
		КонецЕсли;
	КонецЦикла;
	
	ОбластьВывода.Параметры.Заполнить(Заголовки);
	ЛинияГраницы	= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
	ОбластьВывода.Область(1, 1, 1, Счетчик).ГраницаСнизу	= ЛинияГраницы;
    ТаблДок.Вывести(ОбластьВывода);
	
	ЛинияГраницы	= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
	ОбластьВывода.Область(1, 1, 1, Счетчик).ГраницаСнизу	= ЛинияГраницы;
	
	Для	Каждого	СтрокаДанных	Из	Данные	Цикл
        ОбластьВывода.Параметры.Заполнить(СтрокаДанных);
        ТаблДок.Вывести(ОбластьВывода);
	КонецЦикла;
	
	Возврат	ТаблДок;
	
КонецФункции

&НаСервере
Функция		СформироватьТекстовыйДокумент(ПереданныеДанные, Заголовки	= Неопределено)	Экспорт
	
	//Если что, можно просто сформировать таблицу/структуру с данными на вывод и вызвать эту функцию для формирования документа.
	Данные		= ПереданныеДанные;
	ТекстДок	= Новый ТекстовыйДокумент;
	СтрокаТекста= "";
	ЭтоТаблица	= Ложь;
	
	//Структура заголовков не обязательна. Если её нет, выводятся все колонки, если есть, то выводятся только колонки в структуре.
	Если	Не	ТипЗнч(Заголовки)	= Тип("Структура")	Тогда
			ЗаполнитьЗаголовки	= Истина;
	   		Заголовки			= Новый Структура;
	Иначе
		ЗаполнитьЗаголовки	= Ложь;
	КонецЕсли;	                     
	
	Если	ТипЗнч(ПереданныеДанные)	= Тип("Строка")
		И	ТипЗнч(ЭтаФорма)			= Тип("УправляемаяФорма")
		И	ПереданныеДанные			= "ТаблицаДанных"			Тогда//Передано имя элемента формы, выводим таблицу значений
			Данные	= РеквизитФормыВЗначение(Данные);
	Иначе//У нас ничего не выйдет, если переданы заголовки, убрать и дальше вывалиться в ошибку
   		Заголовки			= Новый Структура;
		ЗаполнитьЗаголовки	= Истина;
	КонецЕсли;
	
	Если		Не	ЗаполнитьЗаголовки						Тогда//Выводим по заголовкам
		ДанныеКолонок		= Заголовки;
		Колонка_Имя			= "Ключ";
		Колонка_Заголовок	= "Значение";
	ИначеЕсли	ТипЗнч(Данные)	= Тип("ТаблицаЗначений")	Тогда//Выводим таблицу значений
		ДанныеКолонок		= Данные.Колонки;
		Колонка_Имя			= "Имя";
		Колонка_Заголовок	= "Заголовок";
	ИначеЕсли	ТипЗнч(Данные)	= Тип("Массив")
			И	Данные.Количество()
			И	ТипЗнч(Данные[0])	= Тип("Структура")		Тогда//Выводим массив структур. Если надо передать данные с клиента, можно в массиве строк
					ДанныеКолонок		= Данные[0];
					Колонка_Имя			= "Ключ";
					Колонка_Заголовок	= "Ключ";
	Иначе
		Сообщить("Неверно переданы данные в процедуру формирования табличного документа!",	СтатусСообщения.Обычное);
		ДанныеКолонок	= Новый	Структура;
	КонецЕсли;
	
	РазмерСтроки	= ДанныеКолонок.Количество();
	Если	РазмерСтроки	= 0	Тогда
		Возврат	Неопределено;
	КонецЕсли;
		
	Счетчик			= 0;
	Для	Каждого	Колонка	Из	ДанныеКолонок	Цикл
		Счетчик				= Счетчик	+ 1;
		ИмяКолонки			= Колонка[Колонка_Имя];
		Если	ПустаяСтрока(ИмяКолонки)	Тогда
			Продолжить;
		КонецЕсли;
		ЗаговокКолонки	= ?(ЗначениеЗаполнено(Колонка[Колонка_Заголовок]),Колонка[Колонка_Заголовок],ИмяКолонки);
		СтрокаТекста	= СтрокаТекста	+ ЗаговокКолонки	+ Символы.Таб;
		Если	ЗаполнитьЗаголовки	Тогда//Если не переданы заголовки, заполнить по-умолчанию.
			Заголовки.Вставить(ИмяКолонки, ЗаговокКолонки);
		КонецЕсли;
	КонецЦикла;
	
	СтрокаТекста	= СтрокаТекста	+ Символы.ПС;
	
	Для	Каждого	СтрокаДанных	Из	Данные	Цикл
		Для	Каждого	КлючИЗначение	Из	Заголовки	Цикл
			СтрокаТекста	= СтрокаТекста	+ СтрЗаменить(Строка(СтрокаДанных[КлючИЗначение.Ключ]), Символы.ПС, " ")	+ Символы.Таб;
		КонецЦикла;
		СтрокаТекста	= СтрокаТекста	+ Символы.ПС;
	КонецЦикла;
	
	ТекстДок.УстановитьТекст(СтрокаТекста);
	
	Возврат	ТекстДок;
	
КонецФункции

&НаКлиенте
Процедура	сбисВывестиСписок(Кэш, Контекст)											Экспорт
	
	//В контексте должны быть структуразаголовков с значениями видимые/невидимые, где лежат структуры с заголовками с ключом как имя колонки, значением как заголовок колонки
	//В контексте должны быть данные, для заполнения таблицы с данными. Так, как это УФ, то для доступа к данным на сервере должна быть ТЗ на форме.
	//Можно тут сделать механизм передачи данных из кеша в массив структур, обратившись к форме главного окна - Кэш.ГлавноеОкно[Контекст.ТабличнаяЧасть], положить его в Контекст.Данные и продолжить формирование, или положить в глобальную переменную и передавать в функции формирования документов напрямую.
	Отказ	= Ложь;
	ВосстановитьДанныеНаСервере(Контекст, Отказ);
	Если	Не	Отказ	Тогда
		//МестныйКэш	= Кэш;
		ЭтаФорма.Открыть();
	КонецЕсли;
	
КонецПроцедуры
