&НаКлиенте
Перем ЛокальныйКэш Экспорт;

&НаКлиенте
Функция СбисЗаписатьИзмененияПоДокументам1С(Кэш, МассивДокументов, ДополнительныеПараметры) Экспорт
	Отказ = Ложь;
	РезультатЗаполнения = Кэш.ФормаНастроек.СбисЗаполнитьНеполученныеНастройки(Кэш, Отказ);
	Если Отказ Тогда
		Возврат РезультатЗаполнения;
	КонецЕсли;
	ЗаписатьИзмененияПоДокументам1С(МассивДокументов, Кэш.Ини, Кэш.Парам.КаталогНастроек);
КонецФункции
&НаСервереБезКонтекста
Процедура ЗаписатьИзмененияПоДокументам1С(МассивДокументов, Ини, КаталогНастроек) Экспорт
	// проставляет статусы по идентификаторам пакетов	
	ФайлСтатусов = Новый Файл(КаталогНастроек+"\State.dbf");
	Если ФайлСтатусов.Существует() Тогда
		БД = Новый COMОбъект("ADODB.Connection");
		//БД.Open("Provider=Microsoft.Jet.OLEDB.4.0;" +
		//           "Data Source=" + КаталогНастроек + ";Extended Properties=""DBASE IV;"";");
		Если Ини.Конфигурация.Свойство("СтрокаПодключенияДБФ") Тогда
			СтрокаПодключения = СтрЗаменить(Ини.Конфигурация.СтрокаПодключенияДБФ.Значение, "'","")+КаталогНастроек;
		Иначе
			СтрокаПодключения = "Driver={Microsoft dBASE Driver (*.dbf)};DriverID=533;Dbq=" + КаталогНастроек + ";";
		КонецЕсли;
		БД.Open(СтрокаПодключения);
		Для Каждого СоставПакета Из МассивДокументов Цикл
			Если СоставПакета.Свойство("Идентификатор") и СоставПакета.Свойство("Состояние") Тогда
				Если СоставПакета.Свойство("Редакция") и СоставПакета.Редакция[0].Актуален = "Нет" Тогда  // на документах 1С проставляем статусы только для актуальных редакций
					Продолжить;
				КонецЕсли;
				RecordSet = Новый ComОбъект("ADODB.Recordset");
				Recordset.CursorLocation = 3;
				Recordset.Open("Select * from State where State.IDPACK like'"+СоставПакета.Идентификатор+"%'",БД,2,3);
				
				Пока Recordset.EOF=Ложь Цикл 
// alo <<
					СоставПакета.вставить("Документы1С",новый списокЗначений);
				
					ТипИдДок = RecordSet.Fields("IDDOC").value;
					ТипДок = Лев(ТипИдДок, Найти(ТипИдДок, ":")-1);
					ИдДок = СокрЛП(Сред(ТипИдДок, Найти(ТипИдДок, ":")+1));
					СсылкаДок = Документы[ТипДок].ПолучитьСсылку(Новый УникальныйИдентификатор(ИдДок));
					Если сбисПриоритетСтатуса(СоставПакета.Состояние.Название) > сбисПриоритетСтатуса(RecordSet.Fields("STATE").value) Тогда
						RecordSet.Fields("STATE").value = СоставПакета.Состояние.Название; 
						RecordSet.Update();
						СоставПакета.Документы1С.Добавить(СсылкаДок);
// alo >>
					КонецЕсли;
					
					ИмяДокумента = СсылкаДок.Метаданные().Имя;
					//Если Найти(нрег(ИмяДокумента), "фактура")>0 Тогда // в фактуре проставляем дату и способ выставления
					Если Ини.Свойство(ИмяДокумента) и Ини[ИмяДокумента].Свойство("мФайл") Тогда
						Попытка
							Если СоставПакета.Свойство("Событие") и СоставПакета.Событие[0].Название = "Подтверждение даты получения" Тогда
								Событие=СоставПакета.Событие[0];
								Для Каждого Элемент Из Ини[ИмяДокумента].мФайл Цикл
									Если Элемент.Значение.Свойство("ЗаполнятьДатуСпособВыставления") и Элемент.Значение.ЗаполнятьДатуСпособВыставления.Значение ="'Истина'" Тогда
										ИмяРеквизитаДатыВыставления = Сред(Элемент.Значение.ДатаВыставления.Значение, Найти(Элемент.Значение.ДатаВыставления.Значение, ".")+1);
										ИмяРеквизитаСпособаВыставления = Сред(Элемент.Значение.СпособВыставления.Значение, Найти(Элемент.Значение.СпособВыставления.Значение, ".")+1);
										ЗначениеСпособаВыставления = Элемент.Значение.СпособВыставления.Вычислить;
										ДокОбъект = СсылкаДок.ПолучитьОбъект();
										ДокОбъект[ИмяРеквизитаДатыВыставления] = Событие.ДатаВремяДокумента;
										ДокОбъект[ИмяРеквизитаСпособаВыставления] = ЗначениеСпособаВыставления;
										ДокОбъект.Записать();
									КонецЕсли;
									Прервать;
								КонецЦикла;
							КонецЕсли;
						Исключение
						КонецПопытки;
					КонецЕсли;
					//КонецЕсли;
					RecordSet.MoveNext();
				КонецЦикла;
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры
&НаСервереБезКонтекста
Функция ЗаписатьПараметрыДокументовСБИС(ДанныеПоСтатусам,Ини,КаталогНастроек) Экспорт
	// добавляет свойства для документа 1С (при сопоставлении и загрузке документов)	
	Для Каждого Элемент Из ДанныеПоСтатусам Цикл
		ЗаписатьПараметрыДокументаСБИС(Элемент.СтруктураСвойств,Элемент.Документ1С,Ини,КаталогНастроек);
	КонецЦикла;
КонецФункции
&НаСервереБезКонтекста
Функция ЗаписатьПараметрыДокументаСБИС(СтруктураПараметровДокументаСБИС,ДокументСсылка,Ини,КаталогНастроек) Экспорт
	// добавляет свойства для документа 1С (при сопоставлении и загрузке документов)	
	ФайлСтатусов = Новый Файл(КаталогНастроек+"\State.dbf");
	БД = Новый COMОбъект("ADODB.Connection");
	//БД.Open("Provider=Microsoft.Jet.OLEDB.4.0;" +
	//               "Data Source=" + КаталогНастроек + ";Extended Properties=""DBASE IV;"";");
	Если Ини.Свойство("СтрокаПодключенияДБФ") Тогда
		СтрокаПодключения = СтрЗаменить(Ини.СтрокаПодключенияДБФ.Значение, "'","")+КаталогНастроек;
	Иначе
		СтрокаПодключения = "Driver={Microsoft dBASE Driver (*.dbf)};DriverID=533;Dbq=" + КаталогНастроек + ";";
	КонецЕсли;
	БД.Open(СтрокаПодключения);
	Если ФайлСтатусов.Существует() Тогда
	Иначе
		БД.Execute("Create Table State.dbf (IDPACK char(120), IDINPACK char(120), IDDOC char(240), STATE char(240))");
	КонецЕсли;
	
	ИдДок = ДокументСсылка.Метаданные().Имя+":"+строка(ДокументСсылка.УникальныйИдентификатор());
	
	RecordSet = Новый ComОбъект("ADODB.Recordset");
	Recordset.CursorLocation = 3;
	Recordset.Open("Select * from State where State.IDDOC like'"+ИдДок+"%'",БД,2,3);
	
	Если Recordset.EOF=Ложь Тогда 
	Иначе
		RecordSet.AddNew();
		RecordSet.Fields("IDDOC").value=ИдДок; 
	КонецЕсли;
	Для Каждого Свойство Из СтруктураПараметровДокументаСБИС Цикл
		ИмяПоля = ИмяПоляДБФПоИмениСвойства(Свойство.Ключ);
		Recordset.Fields(ИмяПоля).value = Свойство.Значение;
	КонецЦикла;
	RecordSet.Update();
КонецФункции
&НаСервереБезКонтекста
Функция УдалитьПараметрыДокументаСБИС(СтруктураПараметровДокументаСБИС,ДокументСсылка,Ини,КаталогНастроек) Экспорт
	// удаляет свойства для документа 1С (при удалении сопоставления)	
	ФайлСтатусов = Новый Файл(КаталогНастроек+"\State.dbf");
	Если ФайлСтатусов.Существует() Тогда
		БД = Новый COMОбъект("ADODB.Connection");
		//БД.Open("Provider=Microsoft.Jet.OLEDB.4.0;" +
		//           "Data Source=" + КаталогНастроек + ";Extended Properties=""DBASE IV;"";");
		Если Ини.Конфигурация.Свойство("СтрокаПодключенияДБФ") Тогда
			СтрокаПодключения = СтрЗаменить(Ини.Конфигурация.СтрокаПодключенияДБФ.Значение, "'","")+КаталогНастроек;
		Иначе
			СтрокаПодключения = "Driver={Microsoft dBASE Driver (*.dbf)};DriverID=533;Dbq=" + КаталогНастроек + ";";
		КонецЕсли;
		БД.Open(СтрокаПодключения);
		ИдДок = ДокументСсылка.Метаданные().Имя+":"+строка(ДокументСсылка.УникальныйИдентификатор());
		RecordSet = Новый ComОбъект("ADODB.Recordset");
		Recordset.CursorLocation = 3;
		Recordset.Open("Select * from State where State.IDDOC like'"+ИдДок+"%'",БД,2,3);
		
		Если Recordset.EOF=Ложь Тогда 
			Recordset.Delete(); 
		КонецЕсли;
	КонецЕсли;
КонецФункции  
&НаСервереБезКонтекста
Функция УдалитьПараметрыДокументаСБИСПарам(СтруктураПараметровДокументаСБИС,ДокументСсылка,Ини,КаталогНастроек,ДополнительныеПараметры = Неопределено) Экспорт
	
	УдалитьПараметрыДокументаСБИС(СтруктураПараметровДокументаСБИС,ДокументСсылка,Ини,КаталогНастроек);
	
КонецФункции
&НаСервереБезКонтекста
Функция НайтиДокументы1СПоПакетуСБИС(ПолныйСоставПакета, КэшИни, КаталогНастроек, МассивСлужебных) Экспорт
// функция ищет связанные документы 1С для каждого вложения пакета и заполняет массив служебных вложений	
	сч = 0;
	Для Каждого Вложение Из ПолныйСоставПакета.Вложение Цикл
		Если Не Вложение.Свойство("Служебный") или Вложение.Служебный = "Нет" Тогда
			ДанныеДокумента1С = НайтиДокументы1СПоИдВложенияСБИС(ПолныйСоставПакета.Идентификатор, Вложение.Идентификатор, КэшИни, КаталогНастроек);
			ПолныйСоставПакета.Вложение[сч].Вставить("Документы1С", Новый СписокЗначений);
			ПолныйСоставПакета.Вложение[сч].Вставить("Документ1СПроведен");
			Если ЗначениеЗаполнено(ДанныеДокумента1С) Тогда
				ПолныйСоставПакета.Вложение[сч].Документы1С=ДанныеДокумента1С.Ссылки;
				ПолныйСоставПакета.Вложение[сч].Документ1СПроведен=ДанныеДокумента1С.Проведен;
			КонецЕсли;
		Иначе
			МассивСлужебных.Добавить(сч);
		КонецЕсли;
		сч = сч+1;
	КонецЦикла;		
КонецФункции
&НаСервереБезКонтекста
Функция НайтиДокументы1СПоИдВложенияСБИС(Ид, ИдВложения,Ини,КаталогНастроек) Экспорт
	// Ищет документ 1С По идентификаторам пакета и вложения
	Документы1С = Новый СписокЗначений;
	ЕстьПроведенный = Ложь;
	ФайлСтатусов = Новый Файл(КаталогНастроек+"\State.dbf");
	Если ФайлСтатусов.Существует() Тогда
		БД = Новый COMОбъект("ADODB.Connection");
		//БД.Open("Provider=Microsoft.Jet.OLEDB.4.0;" +
		//           "Data Source=" + КаталогНастроек + ";Extended Properties=""DBASE IV;"";");
		Если Ини.Конфигурация.Свойство("СтрокаПодключенияДБФ") Тогда
			СтрокаПодключения = СтрЗаменить(Ини.Конфигурация.СтрокаПодключенияДБФ.Значение, "'","")+КаталогНастроек;
		Иначе
			СтрокаПодключения = "Driver={Microsoft dBASE Driver (*.dbf)};DriverID=533;Dbq=" + КаталогНастроек + ";";
		КонецЕсли;
		БД.Open(СтрокаПодключения);
		RecordSet = Новый ComОбъект("ADODB.Recordset");
		Recordset.CursorLocation = 3;
		Recordset.Open("Select * from State where State.IDPACK like'"+Ид+"%' and State.IDINPACK like'"+ИдВложения+"%'",БД,2,3);
		Пока Recordset.EOF=Ложь Цикл 
			ТипИдДок = RecordSet.Fields("IDDOC").value;
			ТипДок = Лев(ТипИдДок, Найти(ТипИдДок, ":")-1);
			ИдДок = СокрЛП(Сред(ТипИдДок, Найти(ТипИдДок, ":")+1));
			СсылкаДок = Документы[ТипДок].ПолучитьСсылку(Новый УникальныйИдентификатор(ИдДок));
			Документы1С.Добавить(СсылкаДок);
			Попытка    // попытка на случай отправки справочника, а не документа
				Если СсылкаДок.Проведен Тогда
					ЕстьПроведенный = Истина;
				КонецЕсли;
			Исключение
			КонецПопытки;
			RecordSet.MoveNext();
		КонецЦикла;
	КонецЕсли;
	
	Возврат Новый Структура("Ссылки, Проведен",Документы1С, ЕстьПроведенный);
КонецФункции
&НаСервереБезКонтекста
Функция ПрочитатьПараметрыДокументаСБИС(ДокументСсылка, КаталогНастроек, ИмяСвойства, Ини) Экспорт
	// возвращает свойство (статус, идентификатор пакета, идентификатор вложения) документа 1С 	
	ИмяПоля = ИмяПоляДБФПоИмениСвойства(ИмяСвойства);
	ФайлСтатусов = Новый Файл(КаталогНастроек+"\State.dbf");
	Если ФайлСтатусов.Существует() Тогда
		БД = Новый COMОбъект("ADODB.Connection");
		//БД.Open("Provider=Microsoft.Jet.OLEDB.4.0;" +
		//           "Data Source=" + КаталогНастроек + ";Extended Properties=""DBASE IV;"";");
		Если Ини.Конфигурация.Свойство("СтрокаПодключенияДБФ") Тогда
			СтрокаПодключения = СтрЗаменить(Ини.Конфигурация.СтрокаПодключенияДБФ.Значение, "'","")+КаталогНастроек;
		Иначе
			СтрокаПодключения = "Driver={Microsoft dBASE Driver (*.dbf)};DriverID=533;Dbq=" + КаталогНастроек + ";";
		КонецЕсли;
		БД.Open(СтрокаПодключения);
		RecordSet = Новый ComОбъект("ADODB.Recordset");
		Recordset.CursorLocation = 3;
		ИдДок = ДокументСсылка.Метаданные().Имя+":"+строка(ДокументСсылка.УникальныйИдентификатор());
		Recordset.Open("Select * from State where State.IDDOC like'"+ИдДок+"%'",БД,2,3);
		Если Recordset.EOF=Ложь Тогда 
			Возврат RecordSet.Fields(ИмяПоля).value;
		КонецЕсли;	
	КонецЕсли;
	Возврат "";
КонецФункции
&НаСервереБезКонтекста
Функция ПрочитатьПараметрыДокументовСБИС(Знач СписокСсылок,Знач МассивСвойств,Знач Конфигурация,Знач ДополнительныеПараметры) Экспорт
	//Не поддерживается
	Возврат Неопределено;
КонецФункции
&НаСервереБезКонтекста	
Процедура ПолучитьТаблицуДокументов1СПоИдПакетаСБИС(МассивДокументов, ИниКонфигурация, КаталогНастроек) Экспорт	
	// Для массива документов СБИС ищет по идентификаторам пакетов документы 1С	
	ТаблицаДокументов1С = Новый ТаблицаЗначений;
	ТаблицаДокументов1С.Колонки.Добавить("Ид", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(999)));
	ТаблицаДокументов1С.Колонки.Добавить("Ссылка");
	ФайлСтатусов = Новый Файл(КаталогНастроек+"\State.dbf");
	Если ФайлСтатусов.Существует() Тогда
		БД = Новый COMОбъект("ADODB.Connection");
		//БД.Open("Provider=Microsoft.Jet.OLEDB.4.0;" +
		//           "Data Source=" + КаталогНастроек + ";Extended Properties=""DBASE IV;"";");
		Если ИниКонфигурация.Свойство("СтрокаПодключенияДБФ") Тогда
			СтрокаПодключения = СтрЗаменить(ИниКонфигурация.СтрокаПодключенияДБФ.Значение, "'","")+КаталогНастроек;
		Иначе
			СтрокаПодключения = "Driver={Microsoft dBASE Driver (*.dbf)};DriverID=533;Dbq=" + КаталогНастроек + ";";
		КонецЕсли;
		БД.Open(СтрокаПодключения);
		Для Каждого Элемент Из МассивДокументов Цикл				   
			RecordSet = Новый ComОбъект("ADODB.Recordset");
			Recordset.CursorLocation = 3;
			Recordset.Open("Select * from State where State.IDPACK like'"+Элемент.ИдСБИС+"%'",БД,2,3);
			Если Recordset.EOF=Ложь Тогда 
				ТипИдДок = RecordSet.Fields("IDDOC").value;
				ТипДок = Лев(ТипИдДок, Найти(ТипИдДок, ":")-1);
				ИдДок = СокрЛП(Сред(ТипИдДок, Найти(ТипИдДок, ":")+1));
				СсылкаДок = Документы[ТипДок].ПолучитьСсылку(Новый УникальныйИдентификатор(ИдДок));
				НоваяСтрока = ТаблицаДокументов1С.Добавить();
				НоваяСтрока.Ид = Элемент.ИдСБИС;
				НоваяСтрока.Ссылка = СсылкаДок;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	//====================================================================================
	Для каждого стр из МассивДокументов цикл 
		массивДоков =  ТаблицаДокументов1С.найтиСтроки(Новый Структура("Ид", стр.ИдСБИС) ) ;
		Если массивДоков.количество()>0 тогда 
			Документы1С = Новый СписокЗначений;
			Для Каждого Элемент Из массивДоков Цикл
				Документы1С.Добавить(Элемент.Ссылка);
			КонецЦикла;
			стр.Вставить("Документы1С", Документы1С);
			Попытка
				стр.Вставить("СуммаДокумента1С", массивДоков[0].Ссылка.СуммаДокумента);
				Дельта = Число(стр.Сумма) - стр.СуммаДокумента1С;
				Дельта = ?(Дельта<0,-Дельта,Дельта);
				стр.Вставить("Дельта", Дельта);
			Исключение
				стр.Вставить("СуммаДокумента1С", 0);
				стр.Вставить("Дельта", 0);
			КонецПопытки;
			стр.Вставить("Проведен", сбисИндексКартинкиПоДокументу1С(массивДоков[0].Ссылка));
		Иначе
			стр.Вставить("Документы1С",Новый СписокЗначений);
			стр.Вставить("СуммаДокумента1С", 0);
			стр.Вставить("Проведен", -1);
			стр.Вставить("Дельта", 0);
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры
&НаСервереБезКонтекста
Процедура ПолучитьТаблицуДокументов1СПоИдВложенияСБИС(МассивДокументов, МассивИдентификаторов, ИниКонфигурация, КаталогНастроек) Экспорт	
	// Для массива документов СБИС ищет по идентификаторам пакетов и вложений документы 1С	
	ТаблицаДокументов1С = Новый ТаблицаЗначений;
	ТаблицаДокументов1С.Колонки.Добавить("Ид", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(999)));
	ТаблицаДокументов1С.Колонки.Добавить("ИдВложения", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(999)));
	ТаблицаДокументов1С.Колонки.Добавить("Ссылка");
	ФайлСтатусов = Новый Файл(КаталогНастроек+"\State.dbf");
	Если ФайлСтатусов.Существует() Тогда
		БД = Новый COMОбъект("ADODB.Connection");
		//БД.Open("Provider=Microsoft.Jet.OLEDB.4.0;" +
		//           "Data Source=" + КаталогНастроек + ";Extended Properties=""DBASE IV;"";");
		Если ИниКонфигурация.Свойство("СтрокаПодключенияДБФ") Тогда
			СтрокаПодключения = СтрЗаменить(ИниКонфигурация.СтрокаПодключенияДБФ.Значение, "'","")+КаталогНастроек;
		Иначе
			СтрокаПодключения = "Driver={Microsoft dBASE Driver (*.dbf)};DriverID=533;Dbq=" + КаталогНастроек + ";";
		КонецЕсли;
		БД.Open(СтрокаПодключения);
		Для Каждого Элемент Из МассивИдентификаторов Цикл				   
			RecordSet = Новый ComОбъект("ADODB.Recordset");
			Recordset.CursorLocation = 3;
			Recordset.Open("Select * from State where State.IDPACK like'"+Элемент.Ид+"%' and State.IDINPACK like'"+Элемент.ИдВложения+"%'",БД,2,3);
			Если Recordset.EOF=Ложь Тогда 
				ТипИдДок = RecordSet.Fields("IDDOC").value;
				ТипДок = Лев(ТипИдДок, Найти(ТипИдДок, ":")-1);
				ИдДок = СокрЛП(Сред(ТипИдДок, Найти(ТипИдДок, ":")+1));
				СсылкаДок = Документы[ТипДок].ПолучитьСсылку(Новый УникальныйИдентификатор(ИдДок));
				НоваяСтрока = ТаблицаДокументов1С.Добавить();
				НоваяСтрока.Ид = Элемент.Ид;
				НоваяСтрока.ИдВложения = Элемент.ИдВложения;
				НоваяСтрока.Ссылка = СсылкаДок;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	//====================================================================================
	Для каждого стр из МассивДокументов цикл 
		Если стр.СоставПакета[0].Значение.Свойство("Вложение") Тогда
			ДокументПроведен=-1;
			Для Каждого Вложение Из стр.СоставПакета[0].Значение.Вложение Цикл
				Если Не Вложение.Свойство("Служебный") или Вложение.Служебный = "Нет" Тогда
					
					массивДоков =  ТаблицаДокументов1С.найтиСтроки(Новый Структура("Ид, ИдВложения", стр.ИдСБИС, Вложение.Идентификатор) ) ;
					Если массивДоков.количество()>0 тогда 
						Документы1С = Новый СписокЗначений;
						Для Каждого Элемент Из массивДоков Цикл
							Документы1С.Добавить(Элемент.Ссылка);
							стр.Документы1С.Добавить(Элемент.Ссылка);
						КонецЦикла;
						Вложение.Вставить("Документы1С", Документы1С);
						стр.Вставить("СуммаДокумента1С", 0);
						стр.Вставить("Дельта", 0);
						ДокументПроведен = ?(ДокументПроведен=-1,сбисИндексКартинкиПоДокументу1С(массивДоков[0].Ссылка), ДокументПроведен);
						стр.Вставить("Проведен", ДокументПроведен);
					Иначе
						Вложение.Вставить("Документы1С",Новый СписокЗначений);
						стр.Вставить("СуммаДокумента1С", 0);
						Если Не стр.Свойство("Проведен") Тогда
							стр.Вставить("Проведен", -1);
						КонецЕсли;
						стр.Вставить("Дельта", 0);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;	
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры
&НаСервереБезКонтекста
Функция ПолучитьИдДокументаДопСвойства(Знач СсылкаНаОбъект, Знач ДопПараметры) Экспорт
	//Не поддерживается
	Возврат Неопределено;
КонецФункции	
&НаСервереБезКонтекста
Функция ЗаполнитьСтатусыВТаблицеДокументов1С(МассивДокументов1С, ПараметрыФильтра, Ини, КаталогНастроек) Экспорт
	// Используется при построении реестров 1С. Проставляет статусы документов и накладывает фильтр по состоянию документов.
	// Используется только в случае хранения статусов в ДБФ, т.к. при хранении в 1С статусы получаем сразу в запросе.
	ОтфильтрованныйМассивДокументов1С = Новый Массив;
	
	ТаблицаСтатусов = Новый ТаблицаЗначений;
	ТаблицаСтатусов.Колонки.Добавить("Документ1С");
	ТаблицаСтатусов.Колонки.Добавить("Статус");
	
	ФайлСтатусов = Новый Файл(КаталогНастроек+"\State.dbf");
	Если ФайлСтатусов.Существует() Тогда
		
		БД = Новый COMОбъект("ADODB.Connection");
		//БД.Open("Provider=Microsoft.Jet.OLEDB.4.0;" + "Data Source=" + КаталогНастроек + ";Extended Properties=""DBASE IV;"";");
		Если Ини.Конфигурация.Свойство("СтрокаПодключенияДБФ") Тогда
			СтрокаПодключения = СтрЗаменить(Ини.Конфигурация.СтрокаПодключенияДБФ.Значение, "'","")+КаталогНастроек;
		Иначе
			СтрокаПодключения = "Driver={Microsoft dBASE Driver (*.dbf)};DriverID=533;Dbq=" + КаталогНастроек + ";";
		КонецЕсли;
		БД.Open(СтрокаПодключения);
		КоличествоДок = МассивДокументов1С.Количество();
		Шаг = 2000;
		Счетчик = 0;
		ТекущееКоличество = 0;
		
		// делаем запросы статусов из ДБФ по партиям для каждых 2000 документов 1С (разбиваем по частям, т.к. при большом количестве документов ругается "слишком сложный запрос")
		Пока ТекущееКоличество< КоличествоДок Цикл
			RecordSet = Новый ComОбъект("ADODB.Recordset");
			Recordset.CursorLocation = 3;
			sql_str = "Select * from State where State.IDDOC IN(";
			ВремКоличество = Мин(ТекущееКоличество+Шаг, КоличествоДок)-1;
			Для Счетчик=ТекущееКоличество По ВремКоличество Цикл
				ИдДок=МассивДокументов1С[Счетчик].СоставПакета[0].Значение.Метаданные().Имя+":"+строка(МассивДокументов1С[Счетчик].СоставПакета[0].Значение.УникальныйИдентификатор());
				
				sql_str = sql_str+"'"+ИдДок + "', ";     
			КонецЦикла;
			sql_str = Лев(sql_str, СтрДлина(sql_str)-2);
			sql_str = sql_str+")";
			Recordset.Open(sql_str,БД,2,3);
			
			Пока Recordset.EOF=Ложь Цикл 
				НоваяСтр = ТаблицаСтатусов.Добавить();
				ТипИдДок = RecordSet.Fields("IDDOC").value;
				ТипДок = Лев(ТипИдДок, Найти(ТипИдДок, ":")-1);
				ИдДок = СокрЛП(Сред(ТипИдДок, Найти(ТипИдДок, ":")+1));
				СсылкаДок = Документы[ТипДок].ПолучитьСсылку(Новый УникальныйИдентификатор(ИдДок));
				НоваяСтр.Документ1С = СсылкаДок;
				НоваяСтр.Статус = RecordSet.Fields("STATE").value;
				RecordSet.MoveNext();
			КонецЦикла;
			ТекущееКоличество = ТекущееКоличество + Шаг;
		КонецЦикла;
	КонецЕсли;
	Для каждого стр из МассивДокументов1С цикл 
		массивДоков =  ТаблицаСтатусов.найтиСтроки(Новый Структура("Документ1С", стр.Документ1С) ) ;
		Если массивДоков.количество()>0 тогда 
			ИндексКартинки = сбисИндексКартинкиПоСтатусуЭД(массивДоков[0].Статус);
		Иначе
			ИндексКартинки = -1;
		КонецЕсли;
		Если ПараметрыФильтра.ФильтрСостояние = "Все документы" или
			(ПараметрыФильтра.ФильтрСостояние = "Недоставленные" и (ИндексКартинки=1 или ИндексКартинки=2 или ИндексКартинки=9)) или
			((ПараметрыФильтра.ФильтрСостояние = "Требующие ответа" или ПараметрыФильтра.ФильтрСостояние = "Не получен ответ") и ИндексКартинки=4) или 
			(ПараметрыФильтра.ФильтрСостояние = "Утвержденные" и ИндексКартинки=6) или 
			(ПараметрыФильтра.ФильтрСостояние = "Отклоненные" и ИндексКартинки=5) или
			(ПараметрыФильтра.ФильтрСостояние = "С ошибками" и ИндексКартинки=3) или
			(ПараметрыФильтра.ФильтрСостояние = "Удаленные" и ИндексКартинки=8) или
			(ПараметрыФильтра.ФильтрСостояние = "Не отправленные" и ИндексКартинки=-1) Тогда
			Стр.Вставить("Статус", ИндексКартинки);
			ОтфильтрованныйМассивДокументов1С.Добавить(Стр);
		КонецЕсли;
	КонецЦикла;
	
	
	//Для Каждого Стр Из МассивДокументов1С Цикл
	//     Статус =  ПрочитатьПараметрыДокументаСБИС(Стр.СоставПакета[0].Значение, КаталогНастроек, "ДокументСБИС_Статус");
	//     ИндексКартинки = сбисИндексКартинкиПоСтатусуЭД(Статус);
	//     Если ПараметрыФильтра.ФильтрСостояние = "Все документы" или
	//          (ПараметрыФильтра.ФильтрСостояние = "Недоставленные" и (ИндексКартинки=1 или ИндексКартинки=2)) или
	//          ((ПараметрыФильтра.ФильтрСостояние = "Требующие ответа" или ПараметрыФильтра.ФильтрСостояние = "Не получен ответ") и ИндексКартинки=4) или 
	//          (ПараметрыФильтра.ФильтрСостояние = "Утвержденные" и ИндексКартинки=6) или 
	//          (ПараметрыФильтра.ФильтрСостояние = "Отклоненные" и ИндексКартинки=5) или
	//          (ПараметрыФильтра.ФильтрСостояние = "С ошибками" и ИндексКартинки=3) или
	//          (ПараметрыФильтра.ФильтрСостояние = "Удалено контрагентом" и ИндексКартинки=7) или
	//          (ПараметрыФильтра.ФильтрСостояние = "Удаленные" и ИндексКартинки=8) или
	//          (ПараметрыФильтра.ФильтрСостояние = "Несопоставленные" и ИндексКартинки=-1) Тогда
	//          Стр.Вставить("Статус", ИндексКартинки);
	//          ОтфильтрованныйМассивДокументов1С.Добавить(Стр);
	//     КонецЕсли;
	//КонецЦикла;
	Возврат ОтфильтрованныйМассивДокументов1С;
КонецФункции
&НаСервереБезКонтекста
Функция сбисИндексКартинкиПоДокументу1С(Документ1С) Экспорт
	Попытка
		Если Документ1С.Проведен Тогда 
			Возврат 0;
		ИначеЕсли Документ1С.ПометкаУдаления Тогда 
			Возврат 2;
		Иначе
			Возврат 1;
		КонецЕсли;
	Исключение
	    Возврат 0;
	КонецПопытки;
КонецФункции
&НаСервереБезКонтекста
Функция сбисИндексКартинкиПоСтатусуЭД(СтатусЭД) Экспорт
	// Функция возвращает индекс картинки по статусу электронного документа	
	Если		Найти(нрег(СтатусЭД), "выгружен")=1 или Найти(нрег(СтатусЭД), "загружен на сервер")=1 или Найти(нрег(СтатусЭД), "документ редактируется")=1 или Найти(нрег(СтатусЭД), "есть документ")=1 или Найти(нрег(СтатусЭД), "в обработке")=1    
		Или	СтатусЭД = "10"
		Или	СтатусЭД = "0"	Тогда// Выгружен или загружен на сервер 
		Возврат 0;
	ИначеЕсли	Найти(нрег(СтатусЭД), "отослано приглашение")=1
		Или	СтатусЭД = "2" Тогда// Отправлено приглашение
		Возврат 1;
	ИначеЕсли	Найти(нрег(СтатусЭД), "отправлен")=1
		Или	СтатусЭД = "3"	Тогда// Отправлен
		Возврат 2;
	ИначеЕсли	Найти(нрег(СтатусЭД), "ошибка")>0 или Найти(нрег(СтатусЭД), "проблемы при доставке")>0
		Или	СтатусЭД = "6"	Тогда// Ошибки при отправке или при доставке
		Возврат 3;
	ИначеЕсли	Найти(нрег(СтатусЭД),"на утверждении")=1 или Найти(нрег(СтатусЭД),"доставлен")=1
		Или СтатусЭД = "4"	Тогда// Доставлен
		Возврат 4;
	ИначеЕсли	Найти(нрег(СтатусЭД), "выполнение завершено с проблемами")=1 
		Или	СтатусЭД = "9"	Тогда// Отклонен
		Возврат 5;
	ИначеЕсли Найти(нрег(СтатусЭД), "выполнение завершено успешно")=1 
		Или СтатусЭД = "7"	Тогда// Утвержден
		Возврат 6;
	ИначеЕсли	Найти(нрег(СтатусЭД), "удален")=1 или Найти(нрег(СтатусЭД), "аннулирован")=1 
		Или СтатусЭД = "20"	Тогда// Удален контрагентом
		Возврат 7;
	ИначеЕсли Найти(нрег(СтатусЭД), "отозван мной")=1 Тогда                        // Удален мной
		Возврат 8;
	ИначеЕсли Найти(нрег(СтатусЭД), "ожидает подписания")=1 Или СтатусЭД = "23"	Тогда                        // Ожидает подписания
		Возврат 9;
	Иначе
		Возврат -1;
	КонецЕсли;
КонецФункции
&НаСервереБезКонтекста
Функция ИмяПоляДБФПоИмениСвойства(ИмяСвойства)
	Если ИмяСвойства = "ДокументСБИС_Статус" Тогда
		Возврат "STATE";
	ИначеЕсли ИмяСвойства = "ДокументСБИС_Ид" Тогда
		Возврат "IDPACK";
	ИначеЕсли ИмяСвойства = "ДокументСБИС_ИдВложения" Тогда
		Возврат "IDINPACK";
	КонецЕсли;	
КонецФункции
&НаСервереБезКонтекста
Функция МассивСтруктурВТаблицуЗначений(МассивСтруктур)
	Результат = Новый ТаблицаЗначений;
	Если МассивСтруктур = Неопределено Или МассивСтруктур.Количество() = 0 Тогда
		Возврат Результат;
	Иначе 
		Образец = МассивСтруктур[0];
		Для Каждого  Стр из Образец Цикл
			Результат.Колонки.Добавить(Стр.Ключ );
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Стр Из МассивСтруктур Цикл
		СтрТ = Результат.Добавить();
		ЗаполнитьЗначенияСвойств(СтрТ, Стр);		
	КонецЦикла;
	Возврат Результат;
КонецФункции
&НаСервереБезКонтекста
функция сбисПриоритетСтатуса(СтатусЭД)
	// Функция возвращает индекс картинки по статусу электронного документа	
	Если Найти(нрег(СтатусЭД), "выгружен")=1 или Найти(нрег(СтатусЭД), "загружен на сервер")=1 или Найти(нрег(СтатусЭД), "документ редактируется")=1 или Найти(нрег(СтатусЭД), "есть документ")=1 Тогда     // Выгружен или загружен на сервер
		Возврат 0;
	ИначеЕсли Найти(нрег(СтатусЭД), "отослано приглашение")=1 Тогда      // Отправлено приглашение
		Возврат 1;
	ИначеЕсли Найти(нрег(СтатусЭД), "отправлен")=1 Тогда     // Отправлен
		Возврат 2;
	ИначеЕсли Найти(нрег(СтатусЭД), "ошибка")>0 или Найти(нрег(СтатусЭД), "проблемы при доставке")>0 Тогда     // Ошибки при отправке или при доставке
		Возврат 3;
	ИначеЕсли Найти(нрег(СтатусЭД),"на утверждении")=1 или Найти(нрег(СтатусЭД),"доставлен")=1 Тогда                        // Доставлен
		Возврат 4;
	ИначеЕсли Найти(нрег(СтатусЭД), "выполнение завершено с проблемами")=1 Тогда                        // Отклонен
		Возврат 5;
	ИначеЕсли Найти(нрег(СтатусЭД), "выполнение завершено успешно")=1 Тогда                        // Утвержден
		Возврат 6;
	ИначеЕсли Найти(нрег(СтатусЭД), "удален")=1 или Найти(нрег(СтатусЭД), "аннулирован")=1 Тогда                        // Удален контрагентом
		Возврат 7;
	ИначеЕсли Найти(нрег(СтатусЭД), "отозван мной")=1 Тогда                        // Удален мной
		Возврат 8;
	Иначе
		Возврат -1;
	КонецЕсли;
КонецФункции